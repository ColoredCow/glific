searchNodes=[{"doc":"Glific keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.For now we'll keep some commonly used functions here, until we need a new file","ref":"Glific.html","title":"Glific","type":"module"},{"doc":"Convert map string keys to :atom keys","ref":"Glific.html#atomize_keys/1","title":"Glific.atomize_keys/1","type":"function"},{"doc":"Return a time object where you go back x units. We introduce the notion of hour and minute","ref":"Glific.html#go_back_time/3","title":"Glific.go_back_time/3","type":"function"},{"doc":"See if the current time is within the past time units","ref":"Glific.html#in_past_time/3","title":"Glific.in_past_time/3","type":"function"},{"doc":"Wrapper to return :ok/:error when parsing strings to potential integers","ref":"Glific.html#parse_maybe_integer/1","title":"Glific.parse_maybe_integer/1","type":"function"},{"doc":"You shouldn’t really use String.to_atom/1 on user-supplied data. The BEAM has a limit on how many different atoms you can have and they’re not garbage collected! With data coming from outside the system, stick to strings or use String.to_existing_atom/1 instead! So this is a generic function which will convert the string to atom and throws an error in case of invalid key","ref":"Glific.html#safe_string_to_atom/1","title":"Glific.safe_string_to_atom/1","type":"function"},{"doc":"Compute the signature at a specific time for the body","ref":"Glific.html#signature/3","title":"Glific.signature/3","type":"function"},{"doc":"easy way for glific developers to get a stacktrace when debugging","ref":"Glific.html#stacktrace/0","title":"Glific.stacktrace/0","type":"function"},{"doc":"Lets get rid of all non valid characters. We are assuming any language and hence using unicode syntax and not restricting ourselves to alphanumeric","ref":"Glific.html#string_clean/1","title":"Glific.string_clean/1","type":"function"},{"doc":"Really simple function to ensure folks do not add Repo and/or IO calls to an EEx snippet. This is an extremely short term fix to avoid shooting ourselves in the foot, but we should move to lua for flows scripting in the near futureNote that folks can potentially find other ways to access the same modules, so this by no means should be considered remotely secure","ref":"Glific.html#suspicious_code/1","title":"Glific.suspicious_code/1","type":"function"},{"doc":"Validates inputed shortcode, if shortcode is invalid it returns message that the shortcode is invalid along with the valid shortcode.","ref":"Glific.html#validate_shortcode/1","title":"Glific.validate_shortcode/1","type":"function"},{"doc":"A simple interface that connect Oban job status to Appsignal","ref":"Glific.Appsignal.html","title":"Glific.Appsignal","type":"module"},{"doc":"Glific Bigquery Dataset and table creation","ref":"Glific.Bigquery.html","title":"Glific.Bigquery","type":"module"},{"doc":"Alter bigquery table schema, if required this function should be called from iex","ref":"Glific.Bigquery.html#alter_tables/3","title":"Glific.Bigquery.alter_tables/3","type":"function"},{"doc":"Refresh the biquery schema and update all the older versions.","ref":"Glific.Bigquery.html#do_refresh_the_schema/2","title":"Glific.Bigquery.do_refresh_the_schema/2","type":"function"},{"doc":"Format Data for bigquery error","ref":"Glific.Bigquery.html#format_data_for_bigquery/2","title":"Glific.Bigquery.format_data_for_bigquery/2","type":"function"},{"doc":"Format dates for the bigquery.","ref":"Glific.Bigquery.html#format_date/2","title":"Glific.Bigquery.format_date/2","type":"function"},{"doc":"Format all the json values","ref":"Glific.Bigquery.html#format_json/1","title":"Glific.Bigquery.format_json/1","type":"function"},{"doc":"Insert rows in the biqquery","ref":"Glific.Bigquery.html#make_insert_query/4","title":"Glific.Bigquery.make_insert_query/4","type":"function"},{"doc":"Merge delta and main tables.","ref":"Glific.Bigquery.html#make_merge_job/2","title":"Glific.Bigquery.make_merge_job/2","type":"function"},{"doc":"Creating a dataset with messages and contacts as tables","ref":"Glific.Bigquery.html#sync_schema_with_bigquery/1","title":"Glific.Bigquery.sync_schema_with_bigquery/1","type":"function"},{"doc":"Schema for tables to be created for a dataset","ref":"Glific.BigquerySchema.html","title":"Glific.BigquerySchema","type":"module"},{"doc":"Schema for contacts table","ref":"Glific.BigquerySchema.html#contact_schema/0","title":"Glific.BigquerySchema.contact_schema/0","type":"function"},{"doc":"Procedure for flat fields","ref":"Glific.BigquerySchema.html#flat_fields_procedure/2","title":"Glific.BigquerySchema.flat_fields_procedure/2","type":"function"},{"doc":"Schema for flow results table","ref":"Glific.BigquerySchema.html#flow_result_schema/0","title":"Glific.BigquerySchema.flow_result_schema/0","type":"function"},{"doc":"Schema for flows table","ref":"Glific.BigquerySchema.html#flow_schema/0","title":"Glific.BigquerySchema.flow_schema/0","type":"function"},{"doc":"Schema for messages table","ref":"Glific.BigquerySchema.html#message_schema/0","title":"Glific.BigquerySchema.message_schema/0","type":"function"},{"doc":"Represent a menu interpreted from the CSV. Each Menu item either sends a content message or sends a sub-menu. A menu is an array of menu items","ref":"Glific.CSV.Content.html","title":"Glific.CSV.Content","type":"module"},{"doc":"","ref":"Glific.CSV.Content.html#t:t/0","title":"Glific.CSV.Content.t/0","type":"type"},{"doc":"First implemenetation to convert sheets to flows using a menu structure and UUID","ref":"Glific.CSV.File.html","title":"Glific.CSV.File","type":"module"},{"doc":"Given a header, extract the indexes of the language, menu and content items which helps us when parsing each row","ref":"Glific.CSV.File.html#parse_header/1","title":"Glific.CSV.File.parse_header/1","type":"function"},{"doc":"Read a csv file, and split it up into a bunch of tuples that we are interested in. Assuming that the csv file is valid for now","ref":"Glific.CSV.File.html#process_csv_file/3","title":"Glific.CSV.File.process_csv_file/3","type":"function"},{"doc":"","ref":"Glific.CSV.File.html#t:t/0","title":"Glific.CSV.File.t/0","type":"type"},{"doc":"Given a CSV model, and a tracking shortcode, generate the json flow for the CSV incorporating the UUID's used in previous conversions. Store the latest UUID mapping back in the database","ref":"Glific.CSV.Flow.html","title":"Glific.CSV.Flow","type":"module"},{"doc":"Given a menu + content structure, generate the flow for it that matches floweditor input","ref":"Glific.CSV.Flow.html#gen_flow/3","title":"Glific.CSV.Flow.gen_flow/3","type":"function"},{"doc":"Represent a menu interpreted from the CSV. Each Menu item either sends a content message or sends a sub-menu. A menu is an array of menu items","ref":"Glific.CSV.Menu.html","title":"Glific.CSV.Menu","type":"module"},{"doc":"","ref":"Glific.CSV.Menu.html#t:t/0","title":"Glific.CSV.Menu.t/0","type":"type"},{"doc":"Wrapper to allow each organization to modify how the templates are assembled. We will store this either in the DB and/or in the Flow CSV.For now, for experimental purposes we will store it in code :)","ref":"Glific.CSV.Template.html","title":"Glific.CSV.Template","type":"module"},{"doc":"Given a template type and a language, returns the template to stich together the items from the CSV","ref":"Glific.CSV.Template.html#get_template/2","title":"Glific.CSV.Template.get_template/2","type":"function"},{"doc":"Glific Cache management","ref":"Glific.Caches.html","title":"Glific.Caches","type":"module"},{"doc":"Get a cached value based on a key with fallback","ref":"Glific.Caches.html#fetch/3","title":"Glific.Caches.fetch/3","type":"function"},{"doc":"Get a cached value based on a key","ref":"Glific.Caches.html#get/2","title":"Glific.Caches.get/2","type":"function"},{"doc":"Remove a value from the cache","ref":"Glific.Caches.html#remove/2","title":"Glific.Caches.remove/2","type":"function"},{"doc":"Store all the in cachex :flows_cache. At some point, we will just use this dynamically","ref":"Glific.Caches.html#set/4","title":"Glific.Caches.set/4","type":"function"},{"doc":"The cache API behaviour","ref":"Glific.Caches.CacheBehaviour.html","title":"Glific.Caches.CacheBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:fetch/3","title":"Glific.Caches.CacheBehaviour.fetch/3","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:get/2","title":"Glific.Caches.CacheBehaviour.get/2","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:remove/2","title":"Glific.Caches.CacheBehaviour.remove/2","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:set/3","title":"Glific.Caches.CacheBehaviour.set/3","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:set/4","title":"Glific.Caches.CacheBehaviour.set/4","type":"callback"},{"doc":"Wrapper module that allows us to invoke organization specific callback functions to tweak the way the system handles things. This allows clients to override functionality in a similar manner to plugins wordpress.At some point we will move this to a more extensible scheme, which is as yet undetermined","ref":"Glific.Clients.html","title":"Glific.Clients","type":"module"},{"doc":"Programmatially block clients based on organization needs. Use case could be: Allow only numbers from India and US","ref":"Glific.Clients.html#blocked?/2","title":"Glific.Clients.blocked?/2","type":"function"},{"doc":"Allow an organization to dynamically select which contact the broadcast message should go to. This gives NGOs more flexibility when building flows","ref":"Glific.Clients.html#broadcast/3","title":"Glific.Clients.broadcast/3","type":"function"},{"doc":"Overwrite the default GCS storage bucket","ref":"Glific.Clients.html#gcs_params/2","title":"Glific.Clients.gcs_params/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.ReapBenefit.html","title":"Glific.Clients.ReapBenefit","type":"module"},{"doc":"In the case of RB we retrive the flow name of the object (id any) and set that as the directory name","ref":"Glific.Clients.ReapBenefit.html#gcs_params/2","title":"Glific.Clients.ReapBenefit.gcs_params/2","type":"function"},{"doc":"Example implementation of survey computation for STiR Glific.Clients.Stir.compute_art_content(res)","ref":"Glific.Clients.Stir.html","title":"Glific.Clients.Stir","type":"module"},{"doc":"Return art content","ref":"Glific.Clients.Stir.html#compute_art_content/1","title":"Glific.Clients.Stir.compute_art_content/1","type":"function"},{"doc":"Return integer depending on number of n as response in messages","ref":"Glific.Clients.Stir.html#compute_art_results/1","title":"Glific.Clients.Stir.compute_art_results/1","type":"function"},{"doc":"Return total score","ref":"Glific.Clients.Stir.html#compute_survey_score/1","title":"Glific.Clients.Stir.compute_survey_score/1","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.Tap.html","title":"Glific.Clients.Tap","type":"module"},{"doc":"In the case of TAP we retrive the first group the contact is in and store and set the remote name to be a sub-directory under that group (if one exists)","ref":"Glific.Clients.Tap.html#gcs_params/2","title":"Glific.Clients.Tap.gcs_params/2","type":"function"},{"doc":"Glific Cloak migration management on changing encryption keys","ref":"Glific.CloakMigration.html","title":"Glific.CloakMigration","type":"module"},{"doc":"migrate to new key for encryption","ref":"Glific.CloakMigration.html#cloak_migrate/0","title":"Glific.CloakMigration.cloak_migrate/0","type":"function"},{"doc":"Glific interface for all provider communication","ref":"Glific.Communications.html","title":"Glific.Communications","type":"module"},{"doc":"Get the current provider handler based on the config","ref":"Glific.Communications.html#provider_handler/1","title":"Glific.Communications.provider_handler/1","type":"function"},{"doc":"Get the current provider worker based on the organization | Config | Defaultconfig","ref":"Glific.Communications.html#provider_worker/1","title":"Glific.Communications.provider_worker/1","type":"function"},{"doc":"Unified function to publish data on the graphql subscription endpoint. This is still looking for a place to actually reside. This is a good next stop for nowFor now the data types are Message and all join Tag tables","ref":"Glific.Communications.html#publish_data/3","title":"Glific.Communications.publish_data/3","type":"function"},{"doc":"The Message Communication Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Communications.Message.html","title":"Glific.Communications.Message","type":"module"},{"doc":"Callback in case of any error while sending the message","ref":"Glific.Communications.Message.html#handle_error_response/2","title":"Glific.Communications.Message.handle_error_response/2","type":"function"},{"doc":"Callback when message send succsully","ref":"Glific.Communications.Message.html#handle_success_response/2","title":"Glific.Communications.Message.handle_success_response/2","type":"function"},{"doc":"Callback when we receive a message from whats app","ref":"Glific.Communications.Message.html#receive_message/2","title":"Glific.Communications.Message.receive_message/2","type":"function"},{"doc":"Send message to receiver using define provider.","ref":"Glific.Communications.Message.html#send_message/2","title":"Glific.Communications.Message.send_message/2","type":"function"},{"doc":"Callback to update the provider status for a message","ref":"Glific.Communications.Message.html#update_bsp_status/3","title":"Glific.Communications.Message.update_bsp_status/3","type":"function"},{"doc":"The Contacts context.","ref":"Glific.Contacts.html","title":"Glific.Contacts","type":"module"},{"doc":"Add permissioning specific to groups, in this case we want to restrict the visibility of groups that the user can see","ref":"Glific.Contacts.html#add_permission/2","title":"Glific.Contacts.add_permission/2","type":"function"},{"doc":"Check if we can send a message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/1","title":"Glific.Contacts.can_send_message_to?/1","type":"function"},{"doc":"Check if we can send a session message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/2","title":"Glific.Contacts.can_send_message_to?/2","type":"function"},{"doc":"Check if we can send a session message to the contact with some extra perameters","ref":"Glific.Contacts.html#can_send_message_to?/3","title":"Glific.Contacts.can_send_message_to?/3","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes.Examplesiex&gt; change_contact(contact) %Ecto.Changeset{data: %Contact{}}","ref":"Glific.Contacts.html#change_contact/2","title":"Glific.Contacts.change_contact/2","type":"function"},{"doc":"Get contact's current location","ref":"Glific.Contacts.html#contact_location/1","title":"Glific.Contacts.contact_location/1","type":"function"},{"doc":"Update DB fields when contact opted in and ignore if it's blocked","ref":"Glific.Contacts.html#contact_opted_in/4","title":"Glific.Contacts.contact_opted_in/4","type":"function"},{"doc":"Update DB fields when contact opted out","ref":"Glific.Contacts.html#contact_opted_out/3","title":"Glific.Contacts.contact_opted_out/3","type":"function"},{"doc":"Return the count of contacts, using the same filter as list_contacts","ref":"Glific.Contacts.html#count_contacts/1","title":"Glific.Contacts.count_contacts/1","type":"function"},{"doc":"Creates a contact.Examplesiex&gt; create_contact(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#create_contact/1","title":"Glific.Contacts.create_contact/1","type":"function"},{"doc":"Creates a location.Examplesiex&gt; Glific.Contacts.create_location(%{name: value}) {:ok, %Glific.Contacts.Location{}} iex&gt; Glific.Contacts.create_location(%{bad_field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#create_location/1","title":"Glific.Contacts.create_location/1","type":"function"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#delete/3","title":"Glific.Contacts.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#delete!/3","title":"Glific.Contacts.delete!/3","type":"function"},{"doc":"Deletes a contact.Examplesiex&gt; delete_contact(contact) {:ok, %Contact{}} iex&gt; delete_contact(contact) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#delete_contact/1","title":"Glific.Contacts.delete_contact/1","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#get/3","title":"Glific.Contacts.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#get!/3","title":"Glific.Contacts.get!/3","type":"function"},{"doc":"Gets a single contact.Raises Ecto.NoResultsError if the Contact does not exist.Examplesiex&gt; get_contact!(123) %Contact{} iex&gt; get_contact!(456) ** (Ecto.NoResultsError)","ref":"Glific.Contacts.html#get_contact!/1","title":"Glific.Contacts.get_contact!/1","type":"function"},{"doc":"Convert contact field to map for variable substitution","ref":"Glific.Contacts.html#get_contact_field_map/1","title":"Glific.Contacts.get_contact_field_map/1","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#head/3","title":"Glific.Contacts.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#head!/3","title":"Glific.Contacts.head!/3","type":"function"},{"doc":"check if contact is blocked or not","ref":"Glific.Contacts.html#is_contact_blocked?/1","title":"Glific.Contacts.is_contact_blocked?/1","type":"function"},{"doc":"Check if this contact id is a new contact. In general, we should always retrive as little as possible from the DB","ref":"Glific.Contacts.html#is_new_contact/1","title":"Glific.Contacts.is_new_contact/1","type":"function"},{"doc":"Lets centralize the code to detect simulator messages and interaction","ref":"Glific.Contacts.html#is_simulator_contact?/1","title":"Glific.Contacts.is_simulator_contact?/1","type":"function"},{"doc":"Returns the list of contacts.Examplesiex&gt; list_contacts() [%Contact{}, ...]Get the list of contacts filtered by various search options Include contacts only if within list of groups Include contacts only if have list of tags","ref":"Glific.Contacts.html#list_contacts/1","title":"Glific.Contacts.list_contacts/1","type":"function"},{"doc":"Return the list of contacts who are also users","ref":"Glific.Contacts.html#list_user_contacts/1","title":"Glific.Contacts.list_user_contacts/1","type":"function"},{"doc":"This function is called by the messaging framework for all incoming messages, hence might be a good candidate to maintain a contact level cache at some pointWe use a fetch followed by create, to avoid the explosion in the id namespace. We also avoid updating the contact to skip the DB call, and only do so if the name has changed","ref":"Glific.Contacts.html#maybe_create_contact/1","title":"Glific.Contacts.maybe_create_contact/1","type":"function"},{"doc":"Upload a contact phone as opted in","ref":"Glific.Contacts.html#optin_contact/1","title":"Glific.Contacts.optin_contact/1","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#options/3","title":"Glific.Contacts.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#options!/3","title":"Glific.Contacts.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#patch/4","title":"Glific.Contacts.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#patch!/4","title":"Glific.Contacts.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#post/4","title":"Glific.Contacts.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#post!/4","title":"Glific.Contacts.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#put/4","title":"Glific.Contacts.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Contacts.html#put!/4","title":"Glific.Contacts.put!/4","type":"function"},{"doc":"Perform a request.Options:method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamplesExampleApi.request(method: :get, url: &quot;/users/path&quot;) # use shortcut methods ExampleApi.get(&quot;/users/1&quot;) ExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#request/2","title":"Glific.Contacts.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Glific.Contacts.html#request!/2","title":"Glific.Contacts.request!/2","type":"function"},{"doc":"Set session status for opted in and opted out contacts","ref":"Glific.Contacts.html#set_session_status/2","title":"Glific.Contacts.set_session_status/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#trace/3","title":"Glific.Contacts.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Contacts.html#trace!/3","title":"Glific.Contacts.trace!/3","type":"function"},{"doc":"Updates a contact.Examplesiex&gt; update_contact(contact, %{field: new_value}) {:ok, %Contact{}} iex&gt; update_contact(contact, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Contacts.html#update_contact/2","title":"Glific.Contacts.update_contact/2","type":"function"},{"doc":"Invoked from cron jobs to mass update the status of contacts belonging to a specific organizationIn this case, if we can, we might want to do it across the entire DB since the update is across all organizations. The main issue might be the row level security of postgres and how it ties in. For now, lets stick to per organization","ref":"Glific.Contacts.html#update_contact_status/2","title":"Glific.Contacts.update_contact_status/2","type":"function"},{"doc":"Gets or Creates a Contact based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Contacts.html#upsert/1","title":"Glific.Contacts.upsert/1","type":"function"},{"doc":"","ref":"Glific.Contacts.html#t:option/0","title":"Glific.Contacts.option/0","type":"type"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.Contact.html","title":"Glific.Contacts.Contact","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Contact.html#changeset/2","title":"Glific.Contacts.Contact.changeset/2","type":"function"},{"doc":"Populate virtual field of masked phone number","ref":"Glific.Contacts.Contact.html#populate_masked_phone/1","title":"Glific.Contacts.Contact.populate_masked_phone/1","type":"function"},{"doc":"","ref":"Glific.Contacts.Contact.html#t:t/0","title":"Glific.Contacts.Contact.t/0","type":"type"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.ContactsField.html","title":"Glific.Contacts.ContactsField","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.ContactsField.html#changeset/2","title":"Glific.Contacts.ContactsField.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.ContactsField.html#t:t/0","title":"Glific.Contacts.ContactsField.t/0","type":"type"},{"doc":"The Contact Importer Module","ref":"Glific.Contacts.Import.html","title":"Glific.Contacts.Import","type":"module"},{"doc":"This method allows importing of contacts to a particular organization and groupThe method takes in a csv file path and adds the contacts to the particular organization and group.","ref":"Glific.Contacts.Import.html#import_contacts/3","title":"Glific.Contacts.Import.import_contacts/3","type":"function"},{"doc":"Current location of a contact","ref":"Glific.Contacts.Location.html","title":"Glific.Contacts.Location","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Location.html#changeset/2","title":"Glific.Contacts.Location.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.Location.html#t:t/0","title":"Glific.Contacts.Location.t/0","type":"type"},{"doc":"Manage simulator state and allocation to ensure we can have multiple simulators run at the same time","ref":"Glific.Contacts.Simulator.html","title":"Glific.Contacts.Simulator","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Glific.Contacts.Simulator.html#child_spec/1","title":"Glific.Contacts.Simulator.child_spec/1","type":"function"},{"doc":"Check if there is an available simulator for this userIf available, return the free Simulator Contact (there are multiple simulator contacts per organization)If none available, trurn nil","ref":"Glific.Contacts.Simulator.html#get_simulator/2","title":"Glific.Contacts.Simulator.get_simulator/2","type":"function"},{"doc":"Release the simulator associated with this user id. It is possible that there is no simulator associated with this user","ref":"Glific.Contacts.Simulator.html#release_simulator/2","title":"Glific.Contacts.Simulator.release_simulator/2","type":"function"},{"doc":"The main Glific abstraction that exposes the data in a stuctured manner as a set of conversations. For now each contact is associated with one and only one conversation. We will keep the API simple for now, but it is likely to become more complex and will require a fair number of iterations to get right","ref":"Glific.Conversations.html","title":"Glific.Conversations","type":"module"},{"doc":"Returns the last M conversations, each conversation not more than N messages","ref":"Glific.Conversations.html#list_conversations/2","title":"Glific.Conversations.list_conversations/2","type":"function"},{"doc":"The Glific Abstraction to represent the conversation with a user. This unifies a vast majority of the glific data types including: message, contact, and tag","ref":"Glific.Conversations.Conversation.html","title":"Glific.Conversations.Conversation","type":"module"},{"doc":"Create a new conversation. A contact or a group is required for the conversation. Messages can be added later on","ref":"Glific.Conversations.Conversation.html#new/3","title":"Glific.Conversations.Conversation.new/3","type":"function"},{"doc":"","ref":"Glific.Conversations.Conversation.html#t:t/0","title":"Glific.Conversations.Conversation.t/0","type":"type"},{"doc":"The main Glific abstraction that exposes the group conversation data in a stuctured manner as a set of conversations. For now each group is associated with a set of outgoing messages We will keep the API simple for now, but it is likely to become similar to the contact conversations API","ref":"Glific.ConversationsGroup.html","title":"Glific.ConversationsGroup","type":"module"},{"doc":"Returns the last M conversations, each conversation not more than N messages","ref":"Glific.ConversationsGroup.html#list_conversations/2","title":"Glific.ConversationsGroup.list_conversations/2","type":"function"},{"doc":"Module to communicate with DialogFlow v2. This module was taken directly from: https://github.com/resuelve/flowex/I pulled it into our repository since the comments were in Spanish and it did not seem to be maintained, that we could not use as is. The dependency list was quite old etc.","ref":"Glific.Dialogflow.html","title":"Glific.Dialogflow","type":"module"},{"doc":"The request controller which sends and parses requests. We should move this to Tesla","ref":"Glific.Dialogflow.html#request/4","title":"Glific.Dialogflow.request/4","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Dialogflow.SessionWorker.html","title":"Glific.Dialogflow.SessionWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Dialogflow.SessionWorker.html#perform/1","title":"Glific.Dialogflow.SessionWorker.perform/1","type":"function"},{"doc":"Helper to help manage intents","ref":"Glific.Dialogflow.Sessions.html","title":"Glific.Dialogflow.Sessions","type":"module"},{"doc":"Add message to queue worker to detect the intent","ref":"Glific.Dialogflow.Sessions.html#detect_intent/2","title":"Glific.Dialogflow.Sessions.detect_intent/2","type":"function"},{"doc":"Function to communicate with dialogflow to detect the intent of the request","ref":"Glific.Dialogflow.Sessions.html#make_request/3","title":"Glific.Dialogflow.Sessions.make_request/3","type":"function"},{"doc":"Cloak for encrypting strings","ref":"Glific.Encrypted.Binary.html","title":"Glific.Encrypted.Binary","type":"module"},{"doc":"Cloak for encrypting maps","ref":"Glific.Encrypted.Map.html","title":"Glific.Encrypted.Map","type":"module"},{"doc":"The Enum provides a location for all enum related macros. All the constants that Ecto/Elixir used are exposed here as macros, so other files can invoke them as simple functions","ref":"Glific.Enums.html","title":"Glific.Enums","type":"module"},{"doc":"Lets ensure that the constants evaluate to some expected valuesExamplesiex&gt; Glific.Enums.api_status_const() [:ok, :error]iex&gt; Glific.Enums.contact_status_const() [:blocked, :failed, :invalid, :processing, :valid]iex&gt; Glific.Enums.contact_provider_status_const() [:none, :session, :session_and_hsm, :hsm]iex&gt; Glific.Enums.flow_case_const() [:has_any_word]iex&gt; Glific.Enums.flow_router_const() [:switch]iex&gt; Glific.Enums.flow_action_type_const() [:enter_flow, :send_msg, :set_contact_language, :wait_for_response, :set_contact_field]iex&gt; Glific.Enums.flow_type_const() [:message]iex&gt; Glific.Enums.message_flow_const() [:inbound, :outbound]iex&gt; Glific.Enums.message_status_const() [:sent, :delivered, :enqueued, :error, :read, :received, :contact_opt_out]iex&gt; Glific.Enums.message_type_const() [:audio, :contact, :document, :hsm, :image, :location, :text, :video, :sticker]iex&gt; Glific.Enums.question_type_const() [:text, :numeric, :date]iex&gt; Glific.Enums.sort_order_const() [:asc, :desc]We also test the ecto enums in this file, since they exist outside a moduleiex&gt; Glific.Enums.APIStatus.enum_map() Glific.Enums.api_status_const()iex&gt; Glific.Enums.ContactStatus.enum_map() Glific.Enums.contact_status_const()iex&gt; Glific.Enums.ContactProviderStatus.enum_map() Glific.Enums.contact_provider_status_const()iex&gt; Glific.Enums.FlowCase.enum_map() Glific.Enums.flow_case_const()iex&gt; Glific.Enums.FlowRouter.enum_map() Glific.Enums.flow_router_const()iex&gt; Glific.Enums.FlowActionType.enum_map() Glific.Enums.flow_action_type_const()iex&gt; Glific.Enums.FlowType.enum_map() Glific.Enums.flow_type_const()iex&gt; Glific.Enums.MessageFlow.enum_map() Glific.Enums.message_flow_const()iex&gt; Glific.Enums.MessageStatus.enum_map() Glific.Enums.message_status_const()iex&gt; Glific.Enums.MessageType.enum_map() Glific.Enums.message_type_const()iex&gt; Glific.Enums.QuestionType.enum_map() Glific.Enums.question_type_const()iex&gt; Glific.Enums.SortOrder.enum_map() Glific.Enums.sort_order_const()iex&gt; Glific.Enums.ContactFieldValueType.enum_map() Glific.Enums.contact_field_value_type_const()iex&gt; Glific.Enums.ContactFieldScope.enum_map() Glific.Enums.contact_field_scope_const()iex&gt; Glific.Enums.UserRoles.enum_map() Glific.Enums.user_roles_const()","ref":"Glific.Enums.html#api_status_const/0","title":"Glific.Enums.api_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_field_scope_const/0","title":"Glific.Enums.contact_field_scope_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_field_value_type_const/0","title":"Glific.Enums.contact_field_value_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_provider_status_const/0","title":"Glific.Enums.contact_provider_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_status_const/0","title":"Glific.Enums.contact_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_action_type_const/0","title":"Glific.Enums.flow_action_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_case_const/0","title":"Glific.Enums.flow_case_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_router_const/0","title":"Glific.Enums.flow_router_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_type_const/0","title":"Glific.Enums.flow_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_flow_const/0","title":"Glific.Enums.message_flow_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_status_const/0","title":"Glific.Enums.message_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_type_const/0","title":"Glific.Enums.message_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#question_type_const/0","title":"Glific.Enums.question_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#sort_order_const/0","title":"Glific.Enums.sort_order_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#user_roles_const/0","title":"Glific.Enums.user_roles_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.APIStatus.html","title":"Glific.Enums.APIStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.APIStatus.html#cast/1","title":"Glific.Enums.APIStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#create_type/0","title":"Glific.Enums.APIStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#drop_type/0","title":"Glific.Enums.APIStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.APIStatus.html#dump/1","title":"Glific.Enums.APIStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.APIStatus.html#embed_as/1","title":"Glific.Enums.APIStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.APIStatus.html#equal?/2","title":"Glific.Enums.APIStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.APIStatus.html#load/1","title":"Glific.Enums.APIStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schema/0","title":"Glific.Enums.APIStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schemaless_type/0","title":"Glific.Enums.APIStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.APIStatus.html#type/0","title":"Glific.Enums.APIStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#valid_value?/1","title":"Glific.Enums.APIStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#t:t/0","title":"Glific.Enums.APIStatus.t/0","type":"type"},{"doc":"The Enums constant are where all enum values across our entire application should be defined. This is the source of truth for all enums","ref":"Glific.Enums.Constants.html","title":"Glific.Enums.Constants","type":"module"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html","title":"Glific.Enums.ContactFieldScope","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.ContactFieldScope.html#cast/1","title":"Glific.Enums.ContactFieldScope.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#create_type/0","title":"Glific.Enums.ContactFieldScope.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#drop_type/0","title":"Glific.Enums.ContactFieldScope.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.ContactFieldScope.html#dump/1","title":"Glific.Enums.ContactFieldScope.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.ContactFieldScope.html#embed_as/1","title":"Glific.Enums.ContactFieldScope.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.ContactFieldScope.html#equal?/2","title":"Glific.Enums.ContactFieldScope.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.ContactFieldScope.html#load/1","title":"Glific.Enums.ContactFieldScope.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#schema/0","title":"Glific.Enums.ContactFieldScope.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#schemaless_type/0","title":"Glific.Enums.ContactFieldScope.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.ContactFieldScope.html#type/0","title":"Glific.Enums.ContactFieldScope.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#valid_value?/1","title":"Glific.Enums.ContactFieldScope.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#t:t/0","title":"Glific.Enums.ContactFieldScope.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html","title":"Glific.Enums.ContactFieldValueType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.ContactFieldValueType.html#cast/1","title":"Glific.Enums.ContactFieldValueType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#create_type/0","title":"Glific.Enums.ContactFieldValueType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#drop_type/0","title":"Glific.Enums.ContactFieldValueType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.ContactFieldValueType.html#dump/1","title":"Glific.Enums.ContactFieldValueType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.ContactFieldValueType.html#embed_as/1","title":"Glific.Enums.ContactFieldValueType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.ContactFieldValueType.html#equal?/2","title":"Glific.Enums.ContactFieldValueType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.ContactFieldValueType.html#load/1","title":"Glific.Enums.ContactFieldValueType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#schema/0","title":"Glific.Enums.ContactFieldValueType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#schemaless_type/0","title":"Glific.Enums.ContactFieldValueType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.ContactFieldValueType.html#type/0","title":"Glific.Enums.ContactFieldValueType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#valid_value?/1","title":"Glific.Enums.ContactFieldValueType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#t:t/0","title":"Glific.Enums.ContactFieldValueType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html","title":"Glific.Enums.ContactProviderStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.ContactProviderStatus.html#cast/1","title":"Glific.Enums.ContactProviderStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#create_type/0","title":"Glific.Enums.ContactProviderStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#drop_type/0","title":"Glific.Enums.ContactProviderStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.ContactProviderStatus.html#dump/1","title":"Glific.Enums.ContactProviderStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.ContactProviderStatus.html#embed_as/1","title":"Glific.Enums.ContactProviderStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.ContactProviderStatus.html#equal?/2","title":"Glific.Enums.ContactProviderStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.ContactProviderStatus.html#load/1","title":"Glific.Enums.ContactProviderStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#schema/0","title":"Glific.Enums.ContactProviderStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#schemaless_type/0","title":"Glific.Enums.ContactProviderStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.ContactProviderStatus.html#type/0","title":"Glific.Enums.ContactProviderStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#valid_value?/1","title":"Glific.Enums.ContactProviderStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#t:t/0","title":"Glific.Enums.ContactProviderStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactStatus.html","title":"Glific.Enums.ContactStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.ContactStatus.html#cast/1","title":"Glific.Enums.ContactStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#create_type/0","title":"Glific.Enums.ContactStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#drop_type/0","title":"Glific.Enums.ContactStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.ContactStatus.html#dump/1","title":"Glific.Enums.ContactStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.ContactStatus.html#embed_as/1","title":"Glific.Enums.ContactStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.ContactStatus.html#equal?/2","title":"Glific.Enums.ContactStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.ContactStatus.html#load/1","title":"Glific.Enums.ContactStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schema/0","title":"Glific.Enums.ContactStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schemaless_type/0","title":"Glific.Enums.ContactStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.ContactStatus.html#type/0","title":"Glific.Enums.ContactStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#valid_value?/1","title":"Glific.Enums.ContactStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#t:t/0","title":"Glific.Enums.ContactStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowActionType.html","title":"Glific.Enums.FlowActionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowActionType.html#cast/1","title":"Glific.Enums.FlowActionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#create_type/0","title":"Glific.Enums.FlowActionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#drop_type/0","title":"Glific.Enums.FlowActionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowActionType.html#dump/1","title":"Glific.Enums.FlowActionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowActionType.html#embed_as/1","title":"Glific.Enums.FlowActionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowActionType.html#equal?/2","title":"Glific.Enums.FlowActionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowActionType.html#load/1","title":"Glific.Enums.FlowActionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schema/0","title":"Glific.Enums.FlowActionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schemaless_type/0","title":"Glific.Enums.FlowActionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowActionType.html#type/0","title":"Glific.Enums.FlowActionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#valid_value?/1","title":"Glific.Enums.FlowActionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#t:t/0","title":"Glific.Enums.FlowActionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowCase.html","title":"Glific.Enums.FlowCase","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowCase.html#cast/1","title":"Glific.Enums.FlowCase.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#create_type/0","title":"Glific.Enums.FlowCase.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#drop_type/0","title":"Glific.Enums.FlowCase.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowCase.html#dump/1","title":"Glific.Enums.FlowCase.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowCase.html#embed_as/1","title":"Glific.Enums.FlowCase.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowCase.html#equal?/2","title":"Glific.Enums.FlowCase.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowCase.html#load/1","title":"Glific.Enums.FlowCase.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schema/0","title":"Glific.Enums.FlowCase.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schemaless_type/0","title":"Glific.Enums.FlowCase.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowCase.html#type/0","title":"Glific.Enums.FlowCase.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#valid_value?/1","title":"Glific.Enums.FlowCase.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#t:t/0","title":"Glific.Enums.FlowCase.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowRouter.html","title":"Glific.Enums.FlowRouter","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowRouter.html#cast/1","title":"Glific.Enums.FlowRouter.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#create_type/0","title":"Glific.Enums.FlowRouter.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#drop_type/0","title":"Glific.Enums.FlowRouter.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowRouter.html#dump/1","title":"Glific.Enums.FlowRouter.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowRouter.html#embed_as/1","title":"Glific.Enums.FlowRouter.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowRouter.html#equal?/2","title":"Glific.Enums.FlowRouter.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowRouter.html#load/1","title":"Glific.Enums.FlowRouter.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schema/0","title":"Glific.Enums.FlowRouter.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schemaless_type/0","title":"Glific.Enums.FlowRouter.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowRouter.html#type/0","title":"Glific.Enums.FlowRouter.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#valid_value?/1","title":"Glific.Enums.FlowRouter.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#t:t/0","title":"Glific.Enums.FlowRouter.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowType.html","title":"Glific.Enums.FlowType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.FlowType.html#cast/1","title":"Glific.Enums.FlowType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#create_type/0","title":"Glific.Enums.FlowType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#drop_type/0","title":"Glific.Enums.FlowType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.FlowType.html#dump/1","title":"Glific.Enums.FlowType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.FlowType.html#embed_as/1","title":"Glific.Enums.FlowType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.FlowType.html#equal?/2","title":"Glific.Enums.FlowType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.FlowType.html#load/1","title":"Glific.Enums.FlowType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schema/0","title":"Glific.Enums.FlowType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schemaless_type/0","title":"Glific.Enums.FlowType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.FlowType.html#type/0","title":"Glific.Enums.FlowType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#valid_value?/1","title":"Glific.Enums.FlowType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#t:t/0","title":"Glific.Enums.FlowType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageFlow.html","title":"Glific.Enums.MessageFlow","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageFlow.html#cast/1","title":"Glific.Enums.MessageFlow.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#create_type/0","title":"Glific.Enums.MessageFlow.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#drop_type/0","title":"Glific.Enums.MessageFlow.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageFlow.html#dump/1","title":"Glific.Enums.MessageFlow.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageFlow.html#embed_as/1","title":"Glific.Enums.MessageFlow.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageFlow.html#equal?/2","title":"Glific.Enums.MessageFlow.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageFlow.html#load/1","title":"Glific.Enums.MessageFlow.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schema/0","title":"Glific.Enums.MessageFlow.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schemaless_type/0","title":"Glific.Enums.MessageFlow.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageFlow.html#type/0","title":"Glific.Enums.MessageFlow.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#valid_value?/1","title":"Glific.Enums.MessageFlow.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#t:t/0","title":"Glific.Enums.MessageFlow.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageStatus.html","title":"Glific.Enums.MessageStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageStatus.html#cast/1","title":"Glific.Enums.MessageStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#create_type/0","title":"Glific.Enums.MessageStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#drop_type/0","title":"Glific.Enums.MessageStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageStatus.html#dump/1","title":"Glific.Enums.MessageStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageStatus.html#embed_as/1","title":"Glific.Enums.MessageStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageStatus.html#equal?/2","title":"Glific.Enums.MessageStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageStatus.html#load/1","title":"Glific.Enums.MessageStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schema/0","title":"Glific.Enums.MessageStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schemaless_type/0","title":"Glific.Enums.MessageStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageStatus.html#type/0","title":"Glific.Enums.MessageStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#valid_value?/1","title":"Glific.Enums.MessageStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#t:t/0","title":"Glific.Enums.MessageStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageType.html","title":"Glific.Enums.MessageType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.MessageType.html#cast/1","title":"Glific.Enums.MessageType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#create_type/0","title":"Glific.Enums.MessageType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#drop_type/0","title":"Glific.Enums.MessageType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.MessageType.html#dump/1","title":"Glific.Enums.MessageType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.MessageType.html#embed_as/1","title":"Glific.Enums.MessageType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.MessageType.html#equal?/2","title":"Glific.Enums.MessageType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.MessageType.html#load/1","title":"Glific.Enums.MessageType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schema/0","title":"Glific.Enums.MessageType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schemaless_type/0","title":"Glific.Enums.MessageType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.MessageType.html#type/0","title":"Glific.Enums.MessageType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#valid_value?/1","title":"Glific.Enums.MessageType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#t:t/0","title":"Glific.Enums.MessageType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.QuestionType.html","title":"Glific.Enums.QuestionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.QuestionType.html#cast/1","title":"Glific.Enums.QuestionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#create_type/0","title":"Glific.Enums.QuestionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#drop_type/0","title":"Glific.Enums.QuestionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.QuestionType.html#dump/1","title":"Glific.Enums.QuestionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.QuestionType.html#embed_as/1","title":"Glific.Enums.QuestionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.QuestionType.html#equal?/2","title":"Glific.Enums.QuestionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.QuestionType.html#load/1","title":"Glific.Enums.QuestionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schema/0","title":"Glific.Enums.QuestionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schemaless_type/0","title":"Glific.Enums.QuestionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.QuestionType.html#type/0","title":"Glific.Enums.QuestionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#valid_value?/1","title":"Glific.Enums.QuestionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#t:t/0","title":"Glific.Enums.QuestionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.SortOrder.html","title":"Glific.Enums.SortOrder","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.SortOrder.html#cast/1","title":"Glific.Enums.SortOrder.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#create_type/0","title":"Glific.Enums.SortOrder.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#drop_type/0","title":"Glific.Enums.SortOrder.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.SortOrder.html#dump/1","title":"Glific.Enums.SortOrder.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.SortOrder.html#embed_as/1","title":"Glific.Enums.SortOrder.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.SortOrder.html#equal?/2","title":"Glific.Enums.SortOrder.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.SortOrder.html#load/1","title":"Glific.Enums.SortOrder.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schema/0","title":"Glific.Enums.SortOrder.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schemaless_type/0","title":"Glific.Enums.SortOrder.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.SortOrder.html#type/0","title":"Glific.Enums.SortOrder.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#valid_value?/1","title":"Glific.Enums.SortOrder.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#t:t/0","title":"Glific.Enums.SortOrder.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.UserRoles.html","title":"Glific.Enums.UserRoles","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Enums.UserRoles.html#cast/1","title":"Glific.Enums.UserRoles.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#create_type/0","title":"Glific.Enums.UserRoles.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#drop_type/0","title":"Glific.Enums.UserRoles.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Enums.UserRoles.html#dump/1","title":"Glific.Enums.UserRoles.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Enums.UserRoles.html#embed_as/1","title":"Glific.Enums.UserRoles.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Enums.UserRoles.html#equal?/2","title":"Glific.Enums.UserRoles.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Enums.UserRoles.html#load/1","title":"Glific.Enums.UserRoles.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#schema/0","title":"Glific.Enums.UserRoles.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#schemaless_type/0","title":"Glific.Enums.UserRoles.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Enums.UserRoles.html#type/0","title":"Glific.Enums.UserRoles.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#valid_value?/1","title":"Glific.Enums.UserRoles.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#t:t/0","title":"Glific.Enums.UserRoles.t/0","type":"type"},{"doc":"Centralizing all the code we need to handle flags across Glific. For now, we'll also put operational code on flags here, as we figure out the right structure","ref":"Glific.Flags.html","title":"Glific.Flags","type":"module"},{"doc":"Update the out of office flag, so we know if we should actually do any work","ref":"Glific.Flags.html#out_of_office_update/1","title":"Glific.Flags.out_of_office_update/1","type":"function"},{"doc":"The Flows context.","ref":"Glific.Flows.html","title":"Glific.Flows","type":"module"},{"doc":"A generic json traversal and building the structure for a specific flow schema which is an array of objects in the json file. Used for Node/Actions, Node/Exits, Router/Cases, and Router/Categories","ref":"Glific.Flows.html#build_flow_objects/4","title":"Glific.Flows.build_flow_objects/4","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking flow changes.Examplesiex&gt; change_flow(flow) %Ecto.Changeset{data: %Flow{}}","ref":"Glific.Flows.html#change_flow/2","title":"Glific.Flows.change_flow/2","type":"function"},{"doc":"Check the required fields for all flow objects. If missing, raise an exception","ref":"Glific.Flows.html#check_required_fields/2","title":"Glific.Flows.check_required_fields/2","type":"function"},{"doc":"Make a copy of a flow","ref":"Glific.Flows.html#copy_flow/2","title":"Glific.Flows.copy_flow/2","type":"function"},{"doc":"Return the count of tags, using the same filter as list_tags","ref":"Glific.Flows.html#count_flows/1","title":"Glific.Flows.count_flows/1","type":"function"},{"doc":"Creates a flow.Examplesiex&gt; create_flow(%{field: value}) {:ok, %Flow{}} iex&gt; create_flow(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#create_flow/1","title":"Glific.Flows.create_flow/1","type":"function"},{"doc":"Save new revision for the flow","ref":"Glific.Flows.html#create_flow_revision/1","title":"Glific.Flows.create_flow_revision/1","type":"function"},{"doc":"Deletes a flow.Examplesiex&gt; delete_flow(flow) {:ok, %Flow{}} iex&gt; delete_flow(flow) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#delete_flow/1","title":"Glific.Flows.delete_flow/1","type":"function"},{"doc":"Check if a flow has been activated since the time sent as a parameter e.g. outofoffice will check if that flow was activated in the last 24 hours daily/weekly will check since start of day/week, etc","ref":"Glific.Flows.html#flow_activated/3","title":"Glific.Flows.flow_activated/3","type":"function"},{"doc":"Create a map of keywords that map to flow ids for each active organization. Also cache this value including the outoffice shortcode","ref":"Glific.Flows.html#flow_keywords_map/1","title":"Glific.Flows.flow_keywords_map/1","type":"function"},{"doc":"A helper function to interact with the Caching API and get the cached flow. It will also set the loaded flow to cache in case it does not exists.","ref":"Glific.Flows.html#get_cached_flow/2","title":"Glific.Flows.get_cached_flow/2","type":"function"},{"doc":"Gets a single flow.Raises Ecto.NoResultsError if the Flow does not exist.Examplesiex&gt; get_flow!(123) %Flow{} iex&gt; get_flow!(456) ** (Ecto.NoResultsError)","ref":"Glific.Flows.html#get_flow!/1","title":"Glific.Flows.get_flow!/1","type":"function"},{"doc":"Get specific flow revision by number","ref":"Glific.Flows.html#get_flow_revision/2","title":"Glific.Flows.get_flow_revision/2","type":"function"},{"doc":"Get a list of all the revisions based on a flow UUID","ref":"Glific.Flows.html#get_flow_revision_list/1","title":"Glific.Flows.get_flow_revision_list/1","type":"function"},{"doc":"Check if the flow is optin flow. Currently we are checking based on the optin keyword only.","ref":"Glific.Flows.html#is_optin_flow?/1","title":"Glific.Flows.is_optin_flow?/1","type":"function"},{"doc":"Returns the list of flows.Examplesiex&gt; list_flows() [%Flow{}, ...]","ref":"Glific.Flows.html#list_flows/1","title":"Glific.Flows.list_flows/1","type":"function"},{"doc":"Update latest flow revision status as published and increment the version Update cached flow definition","ref":"Glific.Flows.html#publish_flow/1","title":"Glific.Flows.publish_flow/1","type":"function"},{"doc":"Start flow for a contact","ref":"Glific.Flows.html#start_contact_flow/2","title":"Glific.Flows.start_contact_flow/2","type":"function"},{"doc":"Start flow for contacts of a group","ref":"Glific.Flows.html#start_group_flow/2","title":"Glific.Flows.start_group_flow/2","type":"function"},{"doc":"Update the cached flow from db. This typically happens when the flow definition is updated via the UI","ref":"Glific.Flows.html#update_cached_flow/2","title":"Glific.Flows.update_cached_flow/2","type":"function"},{"doc":"Updates a flow.Examplesiex&gt; update_flow(flow, %{field: new_value}) {:ok, %Flow{}} iex&gt; update_flow(flow, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.html#update_flow/2","title":"Glific.Flows.update_flow/2","type":"function"},{"doc":"The Action object which encapsulates one action in a given node.","ref":"Glific.Flows.Action.html","title":"Glific.Flows.Action","type":"module"},{"doc":"Execute a action, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Action.html#execute/3","title":"Glific.Flows.Action.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Action.html#process/3","title":"Glific.Flows.Action.process/3","type":"function"},{"doc":"Validate a action and all its children","ref":"Glific.Flows.Action.html#validate/3","title":"Glific.Flows.Action.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Action.html#t:t/0","title":"Glific.Flows.Action.t/0","type":"type"},{"doc":"Start a flow to a group so we can blast it out as soon as possible and ensure we are under the rate limits.","ref":"Glific.Flows.Broadcast.html","title":"Glific.Flows.Broadcast","type":"module"},{"doc":"Lets start a bunch of contacts on a flow in parallel","ref":"Glific.Flows.Broadcast.html#broadcast_contacts/3","title":"Glific.Flows.Broadcast.broadcast_contacts/3","type":"function"},{"doc":"The one simple public interface to broadcast a group","ref":"Glific.Flows.Broadcast.html#broadcast_group/2","title":"Glific.Flows.Broadcast.broadcast_group/2","type":"function"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Case.html","title":"Glific.Flows.Case","type":"module"},{"doc":"Execute a case, given a message. This is the only execute function which has a different signature, since it just consumes one message at a time and executes it against a predefined function It also returns a boolean, rather than a tuple","ref":"Glific.Flows.Case.html#execute/3","title":"Glific.Flows.Case.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Case.html#process/3","title":"Glific.Flows.Case.process/3","type":"function"},{"doc":"Validate a case","ref":"Glific.Flows.Case.html#validate/3","title":"Glific.Flows.Case.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Case.html#t:t/0","title":"Glific.Flows.Case.t/0","type":"type"},{"doc":"The Category object which encapsulates one category in a given node.","ref":"Glific.Flows.Category.html","title":"Glific.Flows.Category","type":"module"},{"doc":"Execute a category, given a message stream.","ref":"Glific.Flows.Category.html#execute/3","title":"Glific.Flows.Category.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Category.html#process/3","title":"Glific.Flows.Category.process/3","type":"function"},{"doc":"Validate a category","ref":"Glific.Flows.Category.html#validate/3","title":"Glific.Flows.Category.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Category.html#t:t/0","title":"Glific.Flows.Category.t/0","type":"type"},{"doc":"Since many of the functions, also do a few actions like send a message etc centralizing it here","ref":"Glific.Flows.ContactAction.html","title":"Glific.Flows.ContactAction","type":"module"},{"doc":"Contact opts in via a flow","ref":"Glific.Flows.ContactAction.html#optin/2","title":"Glific.Flows.ContactAction.optin/2","type":"function"},{"doc":"Contact opts out","ref":"Glific.Flows.ContactAction.html#optout/1","title":"Glific.Flows.ContactAction.optout/1","type":"function"},{"doc":"This is just a think wrapper for send_message, since its basically the same, but instead of sending the message to the contact, sends it to another contact that is identified in the action. You can send the same notification to multiple contacts","ref":"Glific.Flows.ContactAction.html#send_broadcast/3","title":"Glific.Flows.ContactAction.send_broadcast/3","type":"function"},{"doc":"If the template is not defined for the message send text messages. Given a shortcode and a context, send the right session template message to the contact.We also need to handle translations for template messages, since whatsapp gives them unique uuids","ref":"Glific.Flows.ContactAction.html#send_message/4","title":"Glific.Flows.ContactAction.send_message/4","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactField.html","title":"Glific.Flows.ContactField","type":"module"},{"doc":"Add a field {key, value} to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactField.html#add_contact_field/5","title":"Glific.Flows.ContactField.add_contact_field/5","type":"function"},{"doc":"Create contact field","ref":"Glific.Flows.ContactField.html#create_contact_field/1","title":"Glific.Flows.ContactField.create_contact_field/1","type":"function"},{"doc":"list contacts fields.","ref":"Glific.Flows.ContactField.html#list_contacts_fields/1","title":"Glific.Flows.ContactField.list_contacts_fields/1","type":"function"},{"doc":"Reset the fields for a contact.","ref":"Glific.Flows.ContactField.html#reset_contact_fields/1","title":"Glific.Flows.ContactField.reset_contact_fields/1","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactSetting.html","title":"Glific.Flows.ContactSetting","type":"module"},{"doc":"Add a preference to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactSetting.html#add_contact_preference/3","title":"Glific.Flows.ContactSetting.add_contact_preference/3","type":"function"},{"doc":"Delete a preference from a contact. We actually dont really delete it, we just set the value to false, and hence turn it off","ref":"Glific.Flows.ContactSetting.html#delete_contact_preference/2","title":"Glific.Flows.ContactSetting.delete_contact_preference/2","type":"function"},{"doc":"Get all the preferences for this contact","ref":"Glific.Flows.ContactSetting.html#get_contact_preferences/1","title":"Glific.Flows.ContactSetting.get_contact_preferences/1","type":"function"},{"doc":"Reset the preferences for a contact.","ref":"Glific.Flows.ContactSetting.html#reset_contact_preference/1","title":"Glific.Flows.ContactSetting.reset_contact_preference/1","type":"function"},{"doc":"Set the language for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_language/2","title":"Glific.Flows.ContactSetting.set_contact_language/2","type":"function"},{"doc":"Set the name for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_name/2","title":"Glific.Flows.ContactSetting.set_contact_name/2","type":"function"},{"doc":"Wrapper function for setting the contact preference, if preference is empty, it indicates to reset the preference","ref":"Glific.Flows.ContactSetting.html#set_contact_preference/2","title":"Glific.Flows.ContactSetting.set_contact_preference/2","type":"function"},{"doc":"The Exit object which encapsulates one exit in a given node.","ref":"Glific.Flows.Exit.html","title":"Glific.Flows.Exit","type":"module"},{"doc":"Execute a exit, given a message stream.","ref":"Glific.Flows.Exit.html#execute/3","title":"Glific.Flows.Exit.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Exit.html#process/3","title":"Glific.Flows.Exit.process/3","type":"function"},{"doc":"Validate a exit","ref":"Glific.Flows.Exit.html#validate/3","title":"Glific.Flows.Exit.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Exit.html#t:t/0","title":"Glific.Flows.Exit.t/0","type":"type"},{"doc":"The flow object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.Flow.html","title":"Glific.Flows.Flow","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.Flow.html#changeset/2","title":"Glific.Flows.Flow.changeset/2","type":"function"},{"doc":"Build the context so we can execute the flow","ref":"Glific.Flows.Flow.html#context/2","title":"Glific.Flows.Flow.context/2","type":"function"},{"doc":"Return a flow for a specific uuid. Cache is not present in cache","ref":"Glific.Flows.Flow.html#get_flow/3","title":"Glific.Flows.Flow.get_flow/3","type":"function"},{"doc":"load the latest revision, specifically json definition from the flow_revision table. We return the clean definition back","ref":"Glific.Flows.Flow.html#get_latest_definition/1","title":"Glific.Flows.Flow.get_latest_definition/1","type":"function"},{"doc":"Helper function to load a active flow from the database and build an object","ref":"Glific.Flows.Flow.html#get_loaded_flow/3","title":"Glific.Flows.Flow.get_loaded_flow/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Flow.html#process/2","title":"Glific.Flows.Flow.process/2","type":"function"},{"doc":"Create a subflow of an existing flow","ref":"Glific.Flows.Flow.html#start_sub_flow/2","title":"Glific.Flows.Flow.start_sub_flow/2","type":"function"},{"doc":"Validate a flow and ensures the flow is valid with our internal rule-set","ref":"Glific.Flows.Flow.html#validate_flow/3","title":"Glific.Flows.Flow.validate_flow/3","type":"function"},{"doc":"Changeset helper for keywords","ref":"Glific.Flows.Flow.html#validate_keywords/2","title":"Glific.Flows.Flow.validate_keywords/2","type":"function"},{"doc":"","ref":"Glific.Flows.Flow.html#t:t/0","title":"Glific.Flows.Flow.t/0","type":"type"},{"doc":"When we are running a flow, we are running it in the context of a contact and/or a conversation (or other Glific data types). Let encapsulate this in a module and isolate the flow from the other aspects of Glific","ref":"Glific.Flows.FlowContext.html","title":"Glific.Flows.FlowContext","type":"module"},{"doc":"Check if there is an active context (i.e. with a non null, node_uuid for this contact)","ref":"Glific.Flows.FlowContext.html#active_context/2","title":"Glific.Flows.FlowContext.active_context/2","type":"function"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowContext.html#changeset/2","title":"Glific.Flows.FlowContext.changeset/2","type":"function"},{"doc":"Create a FlowContext","ref":"Glific.Flows.FlowContext.html#create_flow_context/1","title":"Glific.Flows.FlowContext.create_flow_context/1","type":"function"},{"doc":"Delete all the contexts which are completed before two days","ref":"Glific.Flows.FlowContext.html#delete_completed_flow_contexts/1","title":"Glific.Flows.FlowContext.delete_completed_flow_contexts/1","type":"function"},{"doc":"Delete all the contexts which are older than 30 days","ref":"Glific.Flows.FlowContext.html#delete_old_flow_contexts/1","title":"Glific.Flows.FlowContext.delete_old_flow_contexts/1","type":"function"},{"doc":"Execute one (or more) steps in a flow based on the message stream","ref":"Glific.Flows.FlowContext.html#execute/2","title":"Glific.Flows.FlowContext.execute/2","type":"function"},{"doc":"Retrieve the value from a results string","ref":"Glific.Flows.FlowContext.html#get_result_value/2","title":"Glific.Flows.FlowContext.get_result_value/2","type":"function"},{"doc":"Start a new context, if there is an existing context, blow it away","ref":"Glific.Flows.FlowContext.html#init_context/4","title":"Glific.Flows.FlowContext.init_context/4","type":"function"},{"doc":"Load the context object, given a flow object and a contact. At some point, we'll get the genserver to cache this","ref":"Glific.Flows.FlowContext.html#load_context/2","title":"Glific.Flows.FlowContext.load_context/2","type":"function"},{"doc":"Set all the flows for a specific context to be completed","ref":"Glific.Flows.FlowContext.html#mark_flows_complete/2","title":"Glific.Flows.FlowContext.mark_flows_complete/2","type":"function"},{"doc":"Count the number of times we have sent the same message in the recent past","ref":"Glific.Flows.FlowContext.html#match_outbound/3","title":"Glific.Flows.FlowContext.match_outbound/3","type":"function"},{"doc":"Resets all the context for the user when we hit an error. This can potentially prevent an infinite loop from happening if flows are connected in a cycle","ref":"Glific.Flows.FlowContext.html#reset_all_contexts/1","title":"Glific.Flows.FlowContext.reset_all_contexts/1","type":"function"},{"doc":"Resets the context and sends control back to the parent context if one exists","ref":"Glific.Flows.FlowContext.html#reset_context/1","title":"Glific.Flows.FlowContext.reset_context/1","type":"function"},{"doc":"Seed the context and set the wakeup time as needed","ref":"Glific.Flows.FlowContext.html#seed_context/4","title":"Glific.Flows.FlowContext.seed_context/4","type":"function"},{"doc":"Set the new node for the context","ref":"Glific.Flows.FlowContext.html#set_node/2","title":"Glific.Flows.FlowContext.set_node/2","type":"function"},{"doc":"Given an input string, consume the input and advance the state of the context","ref":"Glific.Flows.FlowContext.html#step_forward/2","title":"Glific.Flows.FlowContext.step_forward/2","type":"function"},{"doc":"Update the recent_* state as we consume or send a message","ref":"Glific.Flows.FlowContext.html#update_recent/3","title":"Glific.Flows.FlowContext.update_recent/3","type":"function"},{"doc":"Update the contact results with each element of the json map","ref":"Glific.Flows.FlowContext.html#update_results/3","title":"Glific.Flows.FlowContext.update_results/3","type":"function"},{"doc":"Update the contact results state as we step through the flow","ref":"Glific.Flows.FlowContext.html#update_results/4","title":"Glific.Flows.FlowContext.update_results/4","type":"function"},{"doc":"Find all the contexts which need to be woken up and processed","ref":"Glific.Flows.FlowContext.html#wakeup_flows/1","title":"Glific.Flows.FlowContext.wakeup_flows/1","type":"function"},{"doc":"Process one context at a time that is ready to be woken","ref":"Glific.Flows.FlowContext.html#wakeup_one/2","title":"Glific.Flows.FlowContext.wakeup_one/2","type":"function"},{"doc":"","ref":"Glific.Flows.FlowContext.html#t:t/0","title":"Glific.Flows.FlowContext.t/0","type":"type"},{"doc":"The flow count object","ref":"Glific.Flows.FlowCount.html","title":"Glific.Flows.FlowCount","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowCount.html#changeset/2","title":"Glific.Flows.FlowCount.changeset/2","type":"function"},{"doc":"Create flow count","ref":"Glific.Flows.FlowCount.html#create_flow_count/1","title":"Glific.Flows.FlowCount.create_flow_count/1","type":"function"},{"doc":"Get a list of flow count","ref":"Glific.Flows.FlowCount.html#get_flow_count_list/1","title":"Glific.Flows.FlowCount.get_flow_count_list/1","type":"function"},{"doc":"Update flow count","ref":"Glific.Flows.FlowCount.html#update_flow_count/2","title":"Glific.Flows.FlowCount.update_flow_count/2","type":"function"},{"doc":"Upsert flow count","ref":"Glific.Flows.FlowCount.html#upsert_flow_count/1","title":"Glific.Flows.FlowCount.upsert_flow_count/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowCount.html#t:t/0","title":"Glific.Flows.FlowCount.t/0","type":"type"},{"doc":"The flow label object","ref":"Glific.Flows.FlowLabel.html","title":"Glific.Flows.FlowLabel","type":"module"},{"doc":"Glific.Flows.FlowLabel.list_flow_label() Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowLabel.html#changeset/2","title":"Glific.Flows.FlowLabel.changeset/2","type":"function"},{"doc":"Creates a flow_label.Examplesiex&gt; create_flow_label(%{field: value}) {:ok, %FlowLabel{}} iex&gt; create_flow_label(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Flows.FlowLabel.html#create_flow_label/1","title":"Glific.Flows.FlowLabel.create_flow_label/1","type":"function"},{"doc":"Given a organization id, retrieve all the flow labels for organization","ref":"Glific.Flows.FlowLabel.html#get_all_flowlabel/1","title":"Glific.Flows.FlowLabel.get_all_flowlabel/1","type":"function"},{"doc":"Try to first get the flow label, if not present, create it. We dont use the upsert function, since it consumes id's for every failure. we expect a lot more gets, than inserts","ref":"Glific.Flows.FlowLabel.html#get_or_create_flow_label/1","title":"Glific.Flows.FlowLabel.get_or_create_flow_label/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowLabel.html#t:t/0","title":"Glific.Flows.FlowLabel.t/0","type":"type"},{"doc":"Table which stores the flow results for each run of a contact through a flow","ref":"Glific.Flows.FlowResult.html","title":"Glific.Flows.FlowResult","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowResult.html#changeset/2","title":"Glific.Flows.FlowResult.changeset/2","type":"function"},{"doc":"","ref":"Glific.Flows.FlowResult.html#t:t/0","title":"Glific.Flows.FlowResult.t/0","type":"type"},{"doc":"The flow revision object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.FlowRevision.html","title":"Glific.Flows.FlowRevision","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowRevision.html#changeset/2","title":"Glific.Flows.FlowRevision.changeset/2","type":"function"},{"doc":"Default definition when we create a new flow","ref":"Glific.Flows.FlowRevision.html#default_definition/1","title":"Glific.Flows.FlowRevision.default_definition/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowRevision.html#t:t/0","title":"Glific.Flows.FlowRevision.t/0","type":"type"},{"doc":"The Localization object which stores all the localizations for all languages for a flow","ref":"Glific.Flows.Localization.html","title":"Glific.Flows.Localization","type":"module"},{"doc":"Given a language id and an action uuid, return the translation if one exists, else return the original text","ref":"Glific.Flows.Localization.html#get_translation/3","title":"Glific.Flows.Localization.get_translation/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Localization.html#process/1","title":"Glific.Flows.Localization.process/1","type":"function"},{"doc":"","ref":"Glific.Flows.Localization.html#t:t/0","title":"Glific.Flows.Localization.t/0","type":"type"},{"doc":"substitute the contact fileds and result sets in the messages","ref":"Glific.Flows.MessageVarParser.html","title":"Glific.Flows.MessageVarParser","type":"module"},{"doc":"parse the message with variables","ref":"Glific.Flows.MessageVarParser.html#parse/2","title":"Glific.Flows.MessageVarParser.parse/2","type":"function"},{"doc":"Interpolates the values from results into the message body. Might need to integrate it with the substitution above. It will just treat @results.variable to @results.variable.input","ref":"Glific.Flows.MessageVarParser.html#parse_results/2","title":"Glific.Flows.MessageVarParser.parse_results/2","type":"function"},{"doc":"The Node object which encapsulates one node in a given flow","ref":"Glific.Flows.Node.html","title":"Glific.Flows.Node","type":"module"},{"doc":"Execute a node, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Node.html#execute/3","title":"Glific.Flows.Node.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Node.html#process/3","title":"Glific.Flows.Node.process/3","type":"function"},{"doc":"Validate a node and all its children","ref":"Glific.Flows.Node.html#validate/3","title":"Glific.Flows.Node.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Node.html#t:t/0","title":"Glific.Flows.Node.t/0","type":"type"},{"doc":"A central place to define and execute all periodic flows. The current periodic flows in priority order are:Monthly, Weekly, Daily A specific weekday (i.e - Monday, Tuesday, ..) OutOfOfficeAll these flows are shortcode driven for now.At some point, we will make this fleixible and let the NGO define the periodic interval","ref":"Glific.Flows.Periodic.html","title":"Glific.Flows.Periodic","type":"module"},{"doc":"Run all the periodic flows in priority order. Stop when we find the first one that we can execute","ref":"Glific.Flows.Periodic.html#run_flows/2","title":"Glific.Flows.Periodic.run_flows/2","type":"function"},{"doc":"The Router object which encapsulates the router in a given node.","ref":"Glific.Flows.Router.html","title":"Glific.Flows.Router","type":"module"},{"doc":"Execute a router, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Router.html#execute/3","title":"Glific.Flows.Router.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Router.html#process/3","title":"Glific.Flows.Router.process/3","type":"function"},{"doc":"Validate a action and all its children","ref":"Glific.Flows.Router.html#validate/3","title":"Glific.Flows.Router.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Router.html#t:t/0","title":"Glific.Flows.Router.t/0","type":"type"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Templating.html","title":"Glific.Flows.Templating","type":"module"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Templating.html#process/2","title":"Glific.Flows.Templating.process/2","type":"function"},{"doc":"","ref":"Glific.Flows.Templating.html#t:t/0","title":"Glific.Flows.Templating.t/0","type":"type"},{"doc":"The Wait object which encapsulates the wait for a router","ref":"Glific.Flows.Wait.html","title":"Glific.Flows.Wait","type":"module"},{"doc":"Execute a wait, given a message stream.","ref":"Glific.Flows.Wait.html#execute/3","title":"Glific.Flows.Wait.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Wait.html#process/3","title":"Glific.Flows.Wait.process/3","type":"function"},{"doc":"Validate a wait","ref":"Glific.Flows.Wait.html#validate/3","title":"Glific.Flows.Wait.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Wait.html#t:t/0","title":"Glific.Flows.Wait.t/0","type":"type"},{"doc":"Lets wrap all webhook functionality here as we try and get a better handle on the breadth and depth of webhooks","ref":"Glific.Flows.Webhook.html","title":"Glific.Flows.Webhook","type":"module"},{"doc":"Execute a webhook action, could be either get or post for now","ref":"Glific.Flows.Webhook.html#execute/2","title":"Glific.Flows.Webhook.execute/2","type":"function"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Flows.Webhook.html#perform/1","title":"Glific.Flows.Webhook.perform/1","type":"function"},{"doc":"The webhook log object","ref":"Glific.Flows.WebhookLog.html","title":"Glific.Flows.WebhookLog","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.WebhookLog.html#changeset/2","title":"Glific.Flows.WebhookLog.changeset/2","type":"function"},{"doc":"Return the count of webhook_logs, using the same filter as list_webhook_logs","ref":"Glific.Flows.WebhookLog.html#count_webhook_logs/1","title":"Glific.Flows.WebhookLog.count_webhook_logs/1","type":"function"},{"doc":"Create a Webhook Log","ref":"Glific.Flows.WebhookLog.html#create_webhook_log/1","title":"Glific.Flows.WebhookLog.create_webhook_log/1","type":"function"},{"doc":"Returns the list of webhook_logs. Since this is very basic and only listing funcatinality we added the status filter like this. In future we will put the status as virtual filed in the webhook logs itself.","ref":"Glific.Flows.WebhookLog.html#list_webhook_logs/1","title":"Glific.Flows.WebhookLog.list_webhook_logs/1","type":"function"},{"doc":"Update a Webhook Log","ref":"Glific.Flows.WebhookLog.html#update_webhook_log/2","title":"Glific.Flows.WebhookLog.update_webhook_log/2","type":"function"},{"doc":"","ref":"Glific.Flows.WebhookLog.html#t:t/0","title":"Glific.Flows.WebhookLog.t/0","type":"type"},{"doc":"Glific Bigquery Dataset and table creation","ref":"Glific.GCS.html","title":"Glific.GCS","type":"module"},{"doc":"Fetch token for GCS","ref":"Glific.GCS.html#get_token/1","title":"Glific.GCS.get_token/1","type":"function"},{"doc":"Creating a dataset with messages and contacts as tables","ref":"Glific.GCS.html#refresh_gsc_setup/1","title":"Glific.GCS.refresh_gsc_setup/1","type":"function"},{"doc":"The Groups context.","ref":"Glific.Groups.html","title":"Glific.Groups","type":"module"},{"doc":"Add permissioning specific to groups, in this case we want to restrict the visibility of groups that the user can see","ref":"Glific.Groups.html#add_permission/2","title":"Glific.Groups.add_permission/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking group changes.Examplesiex&gt; change_group(group) %Ecto.Changeset{data: %Group{}}","ref":"Glific.Groups.html#change_group/2","title":"Glific.Groups.change_group/2","type":"function"},{"doc":"Return the count of group contacts","ref":"Glific.Groups.html#contacts_count/1","title":"Glific.Groups.contacts_count/1","type":"function"},{"doc":"Return the count of groups, using the same filter as list_groups","ref":"Glific.Groups.html#count_groups/1","title":"Glific.Groups.count_groups/1","type":"function"},{"doc":"Creates a contact group.Examplesiex&gt; create_contact_group(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_contact_group/1","title":"Glific.Groups.create_contact_group/1","type":"function"},{"doc":"Creates a group.Examplesiex&gt; create_group(%{field: value}) {:ok, %Group{}} iex&gt; create_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_group/1","title":"Glific.Groups.create_group/1","type":"function"},{"doc":"Creates a user group.Examplesiex&gt; create_user_group(%{field: value}) {:ok, %User{}} iex&gt; create_user_group(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#create_user_group/1","title":"Glific.Groups.create_user_group/1","type":"function"},{"doc":"Delete contact groups","ref":"Glific.Groups.html#delete_contact_groups_by_ids/2","title":"Glific.Groups.delete_contact_groups_by_ids/2","type":"function"},{"doc":"Deletes a group.Examplesiex&gt; delete_group(group) {:ok, %Group{}} iex&gt; delete_group(group) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#delete_group/1","title":"Glific.Groups.delete_group/1","type":"function"},{"doc":"Delete group contacts","ref":"Glific.Groups.html#delete_group_contacts_by_ids/2","title":"Glific.Groups.delete_group_contacts_by_ids/2","type":"function"},{"doc":"Delete group users","ref":"Glific.Groups.html#delete_group_users_by_ids/2","title":"Glific.Groups.delete_group_users_by_ids/2","type":"function"},{"doc":"Delete user groups","ref":"Glific.Groups.html#delete_user_groups_by_ids/2","title":"Glific.Groups.delete_user_groups_by_ids/2","type":"function"},{"doc":"Gets a single group.Raises Ecto.NoResultsError if the Group does not exist.Examplesiex&gt; get_group!(123) %Group{} iex&gt; get_group!(456) ** (Ecto.NoResultsError)","ref":"Glific.Groups.html#get_group!/1","title":"Glific.Groups.get_group!/1","type":"function"},{"doc":"Fetches all group ids in an organization","ref":"Glific.Groups.html#get_group_ids/0","title":"Glific.Groups.get_group_ids/0","type":"function"},{"doc":"Given a group id, get stats on the contacts within this group based on bsp_status and also the total count","ref":"Glific.Groups.html#info_group_contacts/1","title":"Glific.Groups.info_group_contacts/1","type":"function"},{"doc":"Returns the list of groups.Examplesiex&gt; list_groups() [%Group{}, ...]","ref":"Glific.Groups.html#list_groups/2","title":"Glific.Groups.list_groups/2","type":"function"},{"doc":"Updates a group.Examplesiex&gt; update_group(group, %{field: new_value}) {:ok, %Group{}} iex&gt; update_group(group, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Groups.html#update_group/2","title":"Glific.Groups.update_group/2","type":"function"},{"doc":"Updates user groups entries","ref":"Glific.Groups.html#update_user_groups/1","title":"Glific.Groups.update_user_groups/1","type":"function"},{"doc":"Return the count of group users","ref":"Glific.Groups.html#users_count/1","title":"Glific.Groups.users_count/1","type":"function"},{"doc":"A pipe for managing the contact groups","ref":"Glific.Groups.ContactGroup.html","title":"Glific.Groups.ContactGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.ContactGroup.html#changeset/2","title":"Glific.Groups.ContactGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.ContactGroup.html#t:t/0","title":"Glific.Groups.ContactGroup.t/0","type":"type"},{"doc":"Simple container to hold all the contact groups we associate with one contact","ref":"Glific.Groups.ContactGroups.html","title":"Glific.Groups.ContactGroups","type":"module"},{"doc":"Creates and/or deletes a list of contact groups, each group attached to the same contact","ref":"Glific.Groups.ContactGroups.html#update_contact_groups/1","title":"Glific.Groups.ContactGroups.update_contact_groups/1","type":"function"},{"doc":"","ref":"Glific.Groups.ContactGroups.html#t:t/0","title":"Glific.Groups.ContactGroups.t/0","type":"type"},{"doc":"The minimal wrapper for the base Group structure","ref":"Glific.Groups.Group.html","title":"Glific.Groups.Group","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.Group.html#changeset/2","title":"Glific.Groups.Group.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.Group.html#t:t/0","title":"Glific.Groups.Group.t/0","type":"type"},{"doc":"Simple container to hold all the group contacts we associate with one group","ref":"Glific.Groups.GroupContacts.html","title":"Glific.Groups.GroupContacts","type":"module"},{"doc":"Creates and/or deletes a list of group contacts, each contact attached to the same group","ref":"Glific.Groups.GroupContacts.html#update_group_contacts/1","title":"Glific.Groups.GroupContacts.update_group_contacts/1","type":"function"},{"doc":"","ref":"Glific.Groups.GroupContacts.html#t:t/0","title":"Glific.Groups.GroupContacts.t/0","type":"type"},{"doc":"Simple container to hold all the group users we associate with one group","ref":"Glific.Groups.GroupUsers.html","title":"Glific.Groups.GroupUsers","type":"module"},{"doc":"Creates and/or deletes a list of group users, each user attached to the same group","ref":"Glific.Groups.GroupUsers.html#update_group_users/1","title":"Glific.Groups.GroupUsers.update_group_users/1","type":"function"},{"doc":"","ref":"Glific.Groups.GroupUsers.html#t:t/0","title":"Glific.Groups.GroupUsers.t/0","type":"type"},{"doc":"A pipe for managing the user groups","ref":"Glific.Groups.UserGroup.html","title":"Glific.Groups.UserGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.UserGroup.html#changeset/2","title":"Glific.Groups.UserGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.UserGroup.html#t:t/0","title":"Glific.Groups.UserGroup.t/0","type":"type"},{"doc":"Simple container to hold all the user groups we associate with one user","ref":"Glific.Groups.UserGroups.html","title":"Glific.Groups.UserGroups","type":"module"},{"doc":"Creates and/or deletes a list of user groups, each group attached to the same user","ref":"Glific.Groups.UserGroups.html#update_user_groups/1","title":"Glific.Groups.UserGroups.update_user_groups/1","type":"function"},{"doc":"","ref":"Glific.Groups.UserGroups.html#t:t/0","title":"Glific.Groups.UserGroups.t/0","type":"type"},{"doc":"The Jobs context.","ref":"Glific.Jobs.html","title":"Glific.Jobs","type":"module"},{"doc":"Gets a single job entry for the organization.Raises Ecto.NoResultsError if the User does not exist.Examplesiex&gt; get_user!(123) %User{} iex&gt; get_user!(456) ** (Ecto.NoResultsError)","ref":"Glific.Jobs.html#get_chatbase_job/1","title":"Glific.Jobs.get_chatbase_job/1","type":"function"},{"doc":"Gets a single job entry for the organization.Raises Ecto.NoResultsError if the User does not exist.","ref":"Glific.Jobs.html#get_gcs_job/1","title":"Glific.Jobs.get_gcs_job/1","type":"function"},{"doc":"Update a bigquery_job with the message_id and organization_id","ref":"Glific.Jobs.html#update_bigquery_job/2","title":"Glific.Jobs.update_bigquery_job/2","type":"function"},{"doc":"Update a bigquery_job table","ref":"Glific.Jobs.html#update_bigquery_job/3","title":"Glific.Jobs.update_bigquery_job/3","type":"function"},{"doc":"Create or update a gcs_job with the message_id and organization_id","ref":"Glific.Jobs.html#update_gcs_job/1","title":"Glific.Jobs.update_gcs_job/1","type":"function"},{"doc":"Create or update a chatbase_job with the message_id and organization_id","ref":"Glific.Jobs.html#upsert_chatbase_job/1","title":"Glific.Jobs.upsert_chatbase_job/1","type":"function"},{"doc":"Module for checking remaining balance","ref":"Glific.Jobs.BSPBalanceWorker.html","title":"Glific.Jobs.BSPBalanceWorker","type":"module"},{"doc":"periodic function for making calls to bsp for remaining balance","ref":"Glific.Jobs.BSPBalanceWorker.html#perform_periodic/1","title":"Glific.Jobs.BSPBalanceWorker.perform_periodic/1","type":"function"},{"doc":"Process the message table for each organization. Chunk number of messages in groups of 128 and create a bigquery Worker Job to deliver the message to the bigquery serversWe centralize both the cron job and the worker job in one module","ref":"Glific.Jobs.BigQueryWorker.html","title":"Glific.Jobs.BigQueryWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Jobs.BigQueryWorker.html#perform/1","title":"Glific.Jobs.BigQueryWorker.perform/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. we sweep the messages table and queue them up for delivery to bigquery","ref":"Glific.Jobs.BigQueryWorker.html#perform_periodic/1","title":"Glific.Jobs.BigQueryWorker.perform_periodic/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. We updates existing tables","ref":"Glific.Jobs.BigQueryWorker.html#periodic_updates/1","title":"Glific.Jobs.BigQueryWorker.periodic_updates/1","type":"function"},{"doc":"Book keeping table to keep track of the last job that we processed from the messages belonging to the organization","ref":"Glific.Jobs.BigqueryJob.html","title":"Glific.Jobs.BigqueryJob","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Jobs.BigqueryJob.html#changeset/2","title":"Glific.Jobs.BigqueryJob.changeset/2","type":"function"},{"doc":"","ref":"Glific.Jobs.BigqueryJob.html#t:t/0","title":"Glific.Jobs.BigqueryJob.t/0","type":"type"},{"doc":"Book keeping table to keep track of the last job that we processed from the messages belonging to the organization","ref":"Glific.Jobs.ChatbaseJob.html","title":"Glific.Jobs.ChatbaseJob","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Jobs.ChatbaseJob.html#changeset/2","title":"Glific.Jobs.ChatbaseJob.changeset/2","type":"function"},{"doc":"","ref":"Glific.Jobs.ChatbaseJob.html#t:t/0","title":"Glific.Jobs.ChatbaseJob.t/0","type":"type"},{"doc":"Process the message table for each organization. Chunk number of messages in groups of 128 and create a Chatbase Worker Job to deliver the message to the chatbase serversWe centralize both the cron job and the worker job in one module","ref":"Glific.Jobs.ChatbaseWorker.html","title":"Glific.Jobs.ChatbaseWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Jobs.ChatbaseWorker.html#perform/1","title":"Glific.Jobs.ChatbaseWorker.perform/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. we sweep the messages table and queue them up for delivery to chatbase","ref":"Glific.Jobs.ChatbaseWorker.html#perform_periodic/1","title":"Glific.Jobs.ChatbaseWorker.perform_periodic/1","type":"function"},{"doc":"Book keeping table to keep track of the last job that we processed from the messages belonging to the organization","ref":"Glific.Jobs.GcsJob.html","title":"Glific.Jobs.GcsJob","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Jobs.GcsJob.html#changeset/2","title":"Glific.Jobs.GcsJob.changeset/2","type":"function"},{"doc":"","ref":"Glific.Jobs.GcsJob.html#t:t/0","title":"Glific.Jobs.GcsJob.t/0","type":"type"},{"doc":"Process the media table for each organization. Chunk number of message medias in groups of 128 and create a Gcs Worker Job to deliver the message media url to the gcs serversWe centralize both the cron job and the worker job in one module","ref":"Glific.Jobs.GcsWorker.html","title":"Glific.Jobs.GcsWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Jobs.GcsWorker.html#perform/1","title":"Glific.Jobs.GcsWorker.perform/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. we sweep the message media url table and queue them up for delivery to gcs","ref":"Glific.Jobs.GcsWorker.html#perform_periodic/1","title":"Glific.Jobs.GcsWorker.perform_periodic/1","type":"function"},{"doc":"Processes the tasks that need to be handled on a minute schedule","ref":"Glific.Jobs.MinuteWorker.html","title":"Glific.Jobs.MinuteWorker","type":"module"},{"doc":"Worker to implement cron job functionality as implemented by Oban. This is a work in progress and subject to change","ref":"Glific.Jobs.MinuteWorker.html#perform/1","title":"Glific.Jobs.MinuteWorker.perform/1","type":"function"},{"doc":"This is an auto generated file from waffle, that is used to control storage behavior","ref":"Glific.Media.html","title":"Glific.Media","type":"module"},{"doc":"","ref":"Glific.Media.html#acl/2","title":"Glific.Media.acl/2","type":"function"},{"doc":"","ref":"Glific.Media.html#asset_host/0","title":"Glific.Media.asset_host/0","type":"function"},{"doc":"","ref":"Glific.Media.html#async/0","title":"Glific.Media.async/0","type":"function"},{"doc":"","ref":"Glific.Media.html#bucket/0","title":"Glific.Media.bucket/0","type":"function"},{"doc":"","ref":"Glific.Media.html#bucket/1","title":"Glific.Media.bucket/1","type":"function"},{"doc":"","ref":"Glific.Media.html#default_url/1","title":"Glific.Media.default_url/1","type":"function"},{"doc":"","ref":"Glific.Media.html#default_url/2","title":"Glific.Media.default_url/2","type":"function"},{"doc":"","ref":"Glific.Media.html#delete/1","title":"Glific.Media.delete/1","type":"function"},{"doc":"","ref":"Glific.Media.html#filename/2","title":"Glific.Media.filename/2","type":"function"},{"doc":"","ref":"Glific.Media.html#gcs_object_headers/2","title":"Glific.Media.gcs_object_headers/2","type":"function"},{"doc":"","ref":"Glific.Media.html#remote_file_headers/1","title":"Glific.Media.remote_file_headers/1","type":"function"},{"doc":"","ref":"Glific.Media.html#s3_object_headers/2","title":"Glific.Media.s3_object_headers/2","type":"function"},{"doc":"","ref":"Glific.Media.html#storage_dir/2","title":"Glific.Media.storage_dir/2","type":"function"},{"doc":"","ref":"Glific.Media.html#storage_dir_prefix/0","title":"Glific.Media.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Glific.Media.html#store/1","title":"Glific.Media.store/1","type":"function"},{"doc":"","ref":"Glific.Media.html#transform/2","title":"Glific.Media.transform/2","type":"function"},{"doc":"","ref":"Glific.Media.html#url/1","title":"Glific.Media.url/1","type":"function"},{"doc":"","ref":"Glific.Media.html#url/2","title":"Glific.Media.url/2","type":"function"},{"doc":"","ref":"Glific.Media.html#url/3","title":"Glific.Media.url/3","type":"function"},{"doc":"","ref":"Glific.Media.html#urls/2","title":"Glific.Media.urls/2","type":"function"},{"doc":"","ref":"Glific.Media.html#validate/1","title":"Glific.Media.validate/1","type":"function"},{"doc":"","ref":"Glific.Media.Type.html","title":"Glific.Media.Type","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Glific.Media.Type.html#cast/1","title":"Glific.Media.Type.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Glific.Media.Type.html#dump/1","title":"Glific.Media.Type.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Glific.Media.Type.html#embed_as/1","title":"Glific.Media.Type.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Glific.Media.Type.html#equal?/2","title":"Glific.Media.Type.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Glific.Media.Type.html#load/1","title":"Glific.Media.Type.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Glific.Media.Type.html#type/0","title":"Glific.Media.Type.type/0","type":"function"},{"doc":"The Messages context.","ref":"Glific.Messages.html","title":"Glific.Messages","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes.Examplesiex&gt; change_message(message) %Ecto.Changeset{data: %Message{}}","ref":"Glific.Messages.html#change_message/2","title":"Glific.Messages.change_message/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message media changes.Examplesiex&gt; change_message_media(message_media) %Ecto.Changeset{data: %MessageMedia{}}","ref":"Glific.Messages.html#change_message_media/2","title":"Glific.Messages.change_message_media/2","type":"function"},{"doc":"Delete all messages of a contact","ref":"Glific.Messages.html#clear_messages/1","title":"Glific.Messages.clear_messages/1","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages/1","title":"Glific.Messages.count_messages/1","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages_media/1","title":"Glific.Messages.count_messages_media/1","type":"function"},{"doc":"Send a hsm template message to the specific contact.","ref":"Glific.Messages.html#create_and_send_hsm_message/1","title":"Glific.Messages.create_and_send_hsm_message/1","type":"function"},{"doc":"Create and send message to all contacts of a group","ref":"Glific.Messages.html#create_and_send_message_to_group/2","title":"Glific.Messages.create_and_send_message_to_group/2","type":"function"},{"doc":"Send a session template to the specific contact. This is typically used in automation","ref":"Glific.Messages.html#create_and_send_session_template/2","title":"Glific.Messages.create_and_send_session_template/2","type":"function"},{"doc":"Record a message sent to a group in the message table. This message is actually not sent, but is used for display purposes in the group listings","ref":"Glific.Messages.html#create_group_message/1","title":"Glific.Messages.create_group_message/1","type":"function"},{"doc":"Creates a message.Examplesiex&gt; create_message(%{field: value}) {:ok, %Message{}} iex&gt; create_message(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#create_message/1","title":"Glific.Messages.create_message/1","type":"function"},{"doc":"Creates a message media.Examplesiex&gt; create_message_media(%{field: value}) {:ok, %MessageMedia{}} iex&gt; create_message_media(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#create_message_media/1","title":"Glific.Messages.create_message_media/1","type":"function"},{"doc":"We need to simulate a few messages as we move to the system. This is a wrapper function to add those messages, which trigger specific actions within flows. e.g. include: Completed, Failure, Success etc","ref":"Glific.Messages.html#create_temp_message/3","title":"Glific.Messages.create_temp_message/3","type":"function"},{"doc":"Deletes a message.Examplesiex&gt; delete_message(message) {:ok, %Message{}} iex&gt; delete_message(message) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#delete_message/1","title":"Glific.Messages.delete_message/1","type":"function"},{"doc":"Deletes a message media.Examplesiex&gt; delete_message_media(message_media) {:ok, %MessageMedia{}} iex&gt; delete_message_media(message_media) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#delete_message_media/1","title":"Glific.Messages.delete_message_media/1","type":"function"},{"doc":"Gets a single message.Raises Ecto.NoResultsError if the Message does not exist.Examplesiex&gt; get_message!(123) %Message{} iex&gt; get_message!(456) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message!/1","title":"Glific.Messages.get_message!/1","type":"function"},{"doc":"Gets a single message media.Raises Ecto.NoResultsError if the Message media does not exist.Examplesiex&gt; get_message_media!(123) %MessageMedia{} iex&gt; get_message_media!(456) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message_media!/1","title":"Glific.Messages.get_message_media!/1","type":"function"},{"doc":"Given a list of message ids builds a conversation list with most recent conversations at the beginning of the list","ref":"Glific.Messages.html#list_conversations/2","title":"Glific.Messages.list_conversations/2","type":"function"},{"doc":"Returns the list of filtered messages.Examplesiex&gt; list_messages(map()) [%Message{}, ...]","ref":"Glific.Messages.html#list_messages/1","title":"Glific.Messages.list_messages/1","type":"function"},{"doc":"Returns the list of message media.Examplesiex&gt; list_messages_media(map()) [%MessageMedia{}, ...]","ref":"Glific.Messages.html#list_messages_media/1","title":"Glific.Messages.list_messages_media/1","type":"function"},{"doc":"Mark that the user has read all messages sent by a given contact","ref":"Glific.Messages.html#mark_contact_messages_as_read/2","title":"Glific.Messages.mark_contact_messages_as_read/2","type":"function"},{"doc":"Check if the tag is present in message","ref":"Glific.Messages.html#tag_in_message?/2","title":"Glific.Messages.tag_in_message?/2","type":"function"},{"doc":"Updates a message.Examplesiex&gt; update_message(message, %{field: new_value}) {:ok, %Message{}} iex&gt; update_message(message, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#update_message/2","title":"Glific.Messages.update_message/2","type":"function"},{"doc":"Updates a message media.Examplesiex&gt; update_message_media(message_media, %{field: new_value}) {:ok, %MessageMedia{}} iex&gt; update_message_media(message_media, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Messages.html#update_message_media/2","title":"Glific.Messages.update_message_media/2","type":"function"},{"doc":"Message media are mapped with a message","ref":"Glific.Messages.MessageMedia.html","title":"Glific.Messages.MessageMedia","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Messages.MessageMedia.html#changeset/2","title":"Glific.Messages.MessageMedia.changeset/2","type":"function"},{"doc":"","ref":"Glific.Messages.MessageMedia.html#t:t/0","title":"Glific.Messages.MessageMedia.t/0","type":"type"},{"doc":"Create maps for substitutions in message body These maps of available variables will be required by frontend team","ref":"Glific.Messages.MessageVariables.html","title":"Glific.Messages.MessageVariables","type":"module"},{"doc":"Get map of global variables","ref":"Glific.Messages.MessageVariables.html#get_global_field_map/0","title":"Glific.Messages.MessageVariables.get_global_field_map/0","type":"function"},{"doc":"The Partners context. This is the gateway for the application to access/update all the organization and Provider information.","ref":"Glific.Partners.html","title":"Glific.Partners","type":"module"},{"doc":"List of organizations that are active within the system","ref":"Glific.Partners.html#active_organizations/1","title":"Glific.Partners.active_organizations/1","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking organization changes.Examplesiex&gt; Glific.Partners.change_organization(organization) %Ecto.Changeset{data: %Glific.Partners.Organization{}}","ref":"Glific.Partners.html#change_organization/2","title":"Glific.Partners.change_organization/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking provider changes.Examplesiex&gt; change_provider(provider) %Ecto.Changeset{data: %Provider{}}","ref":"Glific.Partners.html#change_provider/2","title":"Glific.Partners.change_provider/2","type":"function"},{"doc":"Return the count of organizations, using the same filter as list_organizations","ref":"Glific.Partners.html#count_organizations/1","title":"Glific.Partners.count_organizations/1","type":"function"},{"doc":"Return the count of providers, using the same filter as list_providers","ref":"Glific.Partners.html#count_providers/1","title":"Glific.Partners.count_providers/1","type":"function"},{"doc":"Creates an organization's credential","ref":"Glific.Partners.html#create_credential/1","title":"Glific.Partners.create_credential/1","type":"function"},{"doc":"Creates a organization.Examplesiex&gt; Glific.Partners.create_organization(%{name: value}) {:ok, %Glific.Partners.Organization{}} iex&gt; Glific.Partners.create_organization(%{bad_field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#create_organization/1","title":"Glific.Partners.create_organization/1","type":"function"},{"doc":"Creates a provider.Examplesiex&gt; create_provider(%{field: value}) {:ok, %Provider{}} iex&gt; create_provider(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#create_provider/1","title":"Glific.Partners.create_provider/1","type":"function"},{"doc":"Updating setup","ref":"Glific.Partners.html#credential_update_callback/2","title":"Glific.Partners.credential_update_callback/2","type":"function"},{"doc":"Deletes an Orgsanization.Examplesiex&gt; Glific.Partners.delete_organization(organization) {:ok, %Glific.Partners.Organization{}} iex&gt; delete_organization(organization) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#delete_organization/1","title":"Glific.Partners.delete_organization/1","type":"function"},{"doc":"Deletes a provider.Examplesiex&gt; delete_provider(provider) {:ok, %Provider{}} iex&gt; delete_provider(provider) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#delete_provider/1","title":"Glific.Partners.delete_provider/1","type":"function"},{"doc":"Disable a specific credential for the organization","ref":"Glific.Partners.html#disable_credential/2","title":"Glific.Partners.disable_credential/2","type":"function"},{"doc":"Fetch opted in contacts data from providers server","ref":"Glific.Partners.html#fetch_opted_in_contacts/1","title":"Glific.Partners.fetch_opted_in_contacts/1","type":"function"},{"doc":"Given a minimal organization object, fill it up and store in cache. Making this public so we can call from test harness and avoid SQL Sandbox issues","ref":"Glific.Partners.html#fill_cache/1","title":"Glific.Partners.fill_cache/1","type":"function"},{"doc":"Returns bsp balance for an organization","ref":"Glific.Partners.html#get_bsp_balance/1","title":"Glific.Partners.get_bsp_balance/1","type":"function"},{"doc":"Get organization's credential by service shortcode","ref":"Glific.Partners.html#get_credential/1","title":"Glific.Partners.get_credential/1","type":"function"},{"doc":"Common function to get the goth config","ref":"Glific.Partners.html#get_goth_token/2","title":"Glific.Partners.get_goth_token/2","type":"function"},{"doc":"Gets a single organization.Raises Ecto.NoResultsError if the organization does not exist.Examplesiex&gt; Glific.Partners.get_organization!(1) %Glific.Partners.Organization{} iex&gt; Glific.Partners.get_organization!(-1) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_organization!/1","title":"Glific.Partners.get_organization!/1","type":"function"},{"doc":"Gets a single provider.Raises Ecto.NoResultsError if the Provider does not exist.Examplesiex&gt; get_provider!(123) %Provider{} iex&gt; get_provider!(456) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_provider!/1","title":"Glific.Partners.get_provider!/1","type":"function"},{"doc":"Returns the list of organizations.Examplesiex&gt; Glific.Partners.list_organizations() [%Glific.Partners.Organization{}, ...]","ref":"Glific.Partners.html#list_organizations/1","title":"Glific.Partners.list_organizations/1","type":"function"},{"doc":"Returns the list of providers.Examplesiex&gt; list_providers() [%Provider{}, ...]","ref":"Glific.Partners.html#list_providers/1","title":"Glific.Partners.list_providers/1","type":"function"},{"doc":"Follow the cachex protocol to load the cache from the DB","ref":"Glific.Partners.html#load_cache/1","title":"Glific.Partners.load_cache/1","type":"function"},{"doc":"Cache the entire organization structure.","ref":"Glific.Partners.html#organization/1","title":"Glific.Partners.organization/1","type":"function"},{"doc":"This contact id is special since it is the sender for all outbound messages and the receiver for all inbound messages","ref":"Glific.Partners.html#organization_contact_id/1","title":"Glific.Partners.organization_contact_id/1","type":"function"},{"doc":"Get the default language id","ref":"Glific.Partners.html#organization_language_id/1","title":"Glific.Partners.organization_language_id/1","type":"function"},{"doc":"Get the timezone","ref":"Glific.Partners.html#organization_timezone/1","title":"Glific.Partners.organization_timezone/1","type":"function"},{"doc":"Execute a function across all active organizations. This function is typically called by a cron job worker processThe handler is expected to take the organization id as its first argument. The second argument is expected to be a map of arguments passed in by the cron job, and can be ignored if not usedThe list is a restricted list of organizations, so we dont repeatedly do work. The convention is as follows:list == nil - the action should not be performed for any organization list == [] (empty list) - the action should be performed for all organizations list == [ values ] - the actions should be performed only for organizations in the values list","ref":"Glific.Partners.html#perform_all/4","title":"Glific.Partners.perform_all/4","type":"function"},{"doc":"Get the organizations which had a message transaction in the last minutes as defined by @active_minutes","ref":"Glific.Partners.html#recent_organizations/2","title":"Glific.Partners.recent_organizations/2","type":"function"},{"doc":"Removing organization cache","ref":"Glific.Partners.html#remove_organization_cache/2","title":"Glific.Partners.remove_organization_cache/2","type":"function"},{"doc":"Updates an organization's credential","ref":"Glific.Partners.html#update_credential/2","title":"Glific.Partners.update_credential/2","type":"function"},{"doc":"Updates an organization.Examplesiex&gt; Glific.Partners.update_organization(Organization, %{name: new_name}) {:ok, %Glific.Partners.Organization{}} iex&gt; Glific.Partners.update_organization(Organization, %{abc: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#update_organization/2","title":"Glific.Partners.update_organization/2","type":"function"},{"doc":"Updates a provider.Examplesiex&gt; update_provider(provider, %{field: new_value}) {:ok, %Provider{}} iex&gt; update_provider(provider, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Partners.html#update_provider/2","title":"Glific.Partners.update_provider/2","type":"function"},{"doc":"Organization's credentials","ref":"Glific.Partners.Credential.html","title":"Glific.Partners.Credential","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Credential.html#changeset/2","title":"Glific.Partners.Credential.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Credential.html#t:t/0","title":"Glific.Partners.Credential.t/0","type":"type"},{"doc":"Organizations are the group of users who will access the system","ref":"Glific.Partners.Organization.html","title":"Glific.Partners.Organization","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Organization.html#changeset/2","title":"Glific.Partners.Organization.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Organization.html#t:t/0","title":"Glific.Partners.Organization.t/0","type":"type"},{"doc":"The Glific abstraction to represent the organization settings of out of office","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html","title":"Glific.Partners.OrganizationSettings.OutOfOffice","type":"module"},{"doc":"Standard changeset pattern for embedded schema","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html#out_of_office_changeset/2","title":"Glific.Partners.OrganizationSettings.OutOfOffice.out_of_office_changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html#t:t/0","title":"Glific.Partners.OrganizationSettings.OutOfOffice.t/0","type":"type"},{"doc":"The Glific abstraction to represent the out of office enabled day schema","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay","type":"module"},{"doc":"Changeset pattern for embedded schema of enabled_day","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html#enabled_day_changeset/2","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.enabled_day_changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html#t:t/0","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.t/0","type":"type"},{"doc":"Provider are the third party Business Service providers who will give a access of WhatsApp API","ref":"Glific.Partners.Provider.html","title":"Glific.Partners.Provider","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Partners.Provider.html#changeset/2","title":"Glific.Partners.Provider.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Provider.html#t:t/0","title":"Glific.Partners.Provider.t/0","type":"type"},{"doc":"Given a message, run it thru the flow engine. This is an auxilary module to help consumer_worker which is the main workhorse","ref":"Glific.Processor.ConsumerFlow.html","title":"Glific.Processor.ConsumerFlow","type":"module"},{"doc":"Start a flow or reactivate a flow if needed. This will be linked to the entire trigger mechanism once we have that under control.","ref":"Glific.Processor.ConsumerFlow.html#check_flows/4","title":"Glific.Processor.ConsumerFlow.check_flows/4","type":"function"},{"doc":"Load the relevant state into the gen_server state object that we need to process messages","ref":"Glific.Processor.ConsumerFlow.html#load_state/1","title":"Glific.Processor.ConsumerFlow.load_state/1","type":"function"},{"doc":"In case contact is not in optin flow let's move ahead with the regualr processing.","ref":"Glific.Processor.ConsumerFlow.html#move_forward/4","title":"Glific.Processor.ConsumerFlow.move_forward/4","type":"function"},{"doc":"Process all messages of type consumer and run them thru the various in-built taggers.","ref":"Glific.Processor.ConsumerTagger.html","title":"Glific.Processor.ConsumerTagger","type":"module"},{"doc":"Load the relevant state into the gen_server state object that we need to process messages","ref":"Glific.Processor.ConsumerTagger.html#load_state/1","title":"Glific.Processor.ConsumerTagger.load_state/1","type":"function"},{"doc":"Process all messages of type consumer and run them thru the various in-built taggers. At a later stage, we will also do translation and dialogflow queries as an offshoot from this GenStage","ref":"Glific.Processor.ConsumerWorker.html","title":"Glific.Processor.ConsumerWorker","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Glific.Processor.ConsumerWorker.html#child_spec/1","title":"Glific.Processor.ConsumerWorker.child_spec/1","type":"function"},{"doc":"A mock for the consumer worker for poolboy","ref":"Glific.Processor.ConsumerWorkerMock.html","title":"Glific.Processor.ConsumerWorkerMock","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Glific.Processor.ConsumerWorkerMock.html#child_spec/1","title":"Glific.Processor.ConsumerWorkerMock.child_spec/1","type":"function"},{"doc":"Helper functions for all processing modules. Might promote this up at a later stage","ref":"Glific.Processor.Helper.html","title":"Glific.Processor.Helper","type":"module"},{"doc":"Helper function to add tag","ref":"Glific.Processor.Helper.html#add_tag/3","title":"Glific.Processor.Helper.add_tag/3","type":"function"},{"doc":"The contact behaviour which all the providers needs to implement for communication","ref":"Glific.Providers.ContactBehaviour.html","title":"Glific.Providers.ContactBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Providers.ContactBehaviour.html#c:optin_contact/1","title":"Glific.Providers.ContactBehaviour.optin_contact/1","type":"callback"},{"doc":"Http API client to intract with Gupshup","ref":"Glific.Providers.Gupshup.ApiClient.html","title":"Glific.Providers.Gupshup.ApiClient","type":"module"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#delete/3","title":"Glific.Providers.Gupshup.ApiClient.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#delete!/3","title":"Glific.Providers.Gupshup.ApiClient.delete!/3","type":"function"},{"doc":"Fetch opted in contacts data from providers server","ref":"Glific.Providers.Gupshup.ApiClient.html#fetch_opted_in_contacts/1","title":"Glific.Providers.Gupshup.ApiClient.fetch_opted_in_contacts/1","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#get/3","title":"Glific.Providers.Gupshup.ApiClient.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#get!/3","title":"Glific.Providers.Gupshup.ApiClient.get!/3","type":"function"},{"doc":"Fetching HSM templates for an organization","ref":"Glific.Providers.Gupshup.ApiClient.html#get_templates/1","title":"Glific.Providers.Gupshup.ApiClient.get_templates/1","type":"function"},{"doc":"Making Tesla get call and adding api key in header","ref":"Glific.Providers.Gupshup.ApiClient.html#gupshup_get/2","title":"Glific.Providers.Gupshup.ApiClient.gupshup_get/2","type":"function"},{"doc":"Making Tesla post call and adding api key in header","ref":"Glific.Providers.Gupshup.ApiClient.html#gupshup_post/3","title":"Glific.Providers.Gupshup.ApiClient.gupshup_post/3","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#head/3","title":"Glific.Providers.Gupshup.ApiClient.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#head!/3","title":"Glific.Providers.Gupshup.ApiClient.head!/3","type":"function"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.Gupshup.ApiClient.html#optin_contact/2","title":"Glific.Providers.Gupshup.ApiClient.optin_contact/2","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#options/3","title":"Glific.Providers.Gupshup.ApiClient.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#options!/3","title":"Glific.Providers.Gupshup.ApiClient.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#patch/4","title":"Glific.Providers.Gupshup.ApiClient.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#patch!/4","title":"Glific.Providers.Gupshup.ApiClient.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#post/4","title":"Glific.Providers.Gupshup.ApiClient.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#post!/4","title":"Glific.Providers.Gupshup.ApiClient.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#put/4","title":"Glific.Providers.Gupshup.ApiClient.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Providers.Gupshup.ApiClient.html#put!/4","title":"Glific.Providers.Gupshup.ApiClient.put!/4","type":"function"},{"doc":"Perform a request.Options:method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamplesExampleApi.request(method: :get, url: &quot;/users/path&quot;) # use shortcut methods ExampleApi.get(&quot;/users/1&quot;) ExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#request/2","title":"Glific.Providers.Gupshup.ApiClient.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Glific.Providers.Gupshup.ApiClient.html#request!/2","title":"Glific.Providers.Gupshup.ApiClient.request!/2","type":"function"},{"doc":"Sending message to contact","ref":"Glific.Providers.Gupshup.ApiClient.html#send_message/2","title":"Glific.Providers.Gupshup.ApiClient.send_message/2","type":"function"},{"doc":"Sending HSM template to contact","ref":"Glific.Providers.Gupshup.ApiClient.html#send_template/2","title":"Glific.Providers.Gupshup.ApiClient.send_template/2","type":"function"},{"doc":"Submitting HSM template for approval","ref":"Glific.Providers.Gupshup.ApiClient.html#submit_template_for_approval/2","title":"Glific.Providers.Gupshup.ApiClient.submit_template_for_approval/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#trace/3","title":"Glific.Providers.Gupshup.ApiClient.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Providers.Gupshup.ApiClient.html#trace!/3","title":"Glific.Providers.Gupshup.ApiClient.trace!/3","type":"function"},{"doc":"","ref":"Glific.Providers.Gupshup.ApiClient.html#t:option/0","title":"Glific.Providers.Gupshup.ApiClient.option/0","type":"type"},{"doc":"Module for checking gupshup remaining balance","ref":"Glific.Providers.Gupshup.GupshupWallet.html","title":"Glific.Providers.Gupshup.GupshupWallet","type":"module"},{"doc":"function for making call to gupshup for remaining balance","ref":"Glific.Providers.Gupshup.GupshupWallet.html#balance/1","title":"Glific.Providers.Gupshup.GupshupWallet.balance/1","type":"function"},{"doc":"Messgae API layer between application and Gupshup","ref":"Glific.Providers.Gupshup.Message.html","title":"Glific.Providers.Gupshup.Message","type":"module"},{"doc":"Message API layer between application and Gupshup","ref":"Glific.Providers.Gupshup.Template.html","title":"Glific.Providers.Gupshup.Template","type":"module"},{"doc":"Submitting HSM template for approval","ref":"Glific.Providers.Gupshup.Template.html#submit_for_approval/1","title":"Glific.Providers.Gupshup.Template.submit_for_approval/1","type":"function"},{"doc":"Updating HSM templates for an organization","ref":"Glific.Providers.Gupshup.Template.html#update_hsm_templates/1","title":"Glific.Providers.Gupshup.Template.update_hsm_templates/1","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Providers.Gupshup.Worker.html","title":"Glific.Providers.Gupshup.Worker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Providers.Gupshup.Worker.html#perform/1","title":"Glific.Providers.Gupshup.Worker.perform/1","type":"function"},{"doc":"Contacts API layer between application and Gupshup","ref":"Glific.Providers.GupshupContacts.html","title":"Glific.Providers.GupshupContacts","type":"module"},{"doc":"Fetch opted in contacts data from providers server","ref":"Glific.Providers.GupshupContacts.html#fetch_opted_in_contacts/1","title":"Glific.Providers.GupshupContacts.fetch_opted_in_contacts/1","type":"function"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.GupshupContacts.html#optin_contact/1","title":"Glific.Providers.GupshupContacts.optin_contact/1","type":"function"},{"doc":"The message behaviour which all the providers needs to implement for communication","ref":"Glific.Providers.MessageBehaviour.html","title":"Glific.Providers.MessageBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_location/1","title":"Glific.Providers.MessageBehaviour.receive_location/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_media/1","title":"Glific.Providers.MessageBehaviour.receive_media/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_text/1","title":"Glific.Providers.MessageBehaviour.receive_text/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_audio/2","title":"Glific.Providers.MessageBehaviour.send_audio/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_document/2","title":"Glific.Providers.MessageBehaviour.send_document/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_image/2","title":"Glific.Providers.MessageBehaviour.send_image/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_sticker/2","title":"Glific.Providers.MessageBehaviour.send_sticker/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_text/2","title":"Glific.Providers.MessageBehaviour.send_text/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_video/2","title":"Glific.Providers.MessageBehaviour.send_video/2","type":"callback"},{"doc":"This file will be handling production database migrations. This is a standard elixir/ecto release file. Copied from: https://hexdocs.pm/phoenix/releases.htmlCalled from &quot;build_scripts/entrypoint.sh&quot; just before starting up application","ref":"Glific.Release.html","title":"Glific.Release","type":"module"},{"doc":"A repository that maps to an underlying data store, controlled by the Postgres adapter.We add a few functions to make our life easier with a few helper functions that ecto does not provide.","ref":"Glific.Repo.html","title":"Glific.Repo","type":"module"},{"doc":"Implement permissioning support via groups. This is the basic wrapper, it uses a context specific permissioning wrapper to add the actual clauses","ref":"Glific.Repo.html#add_permission/3","title":"Glific.Repo.add_permission/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"Glific.Repo.html#aggregate/3","title":"Glific.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"Glific.Repo.html#aggregate/4","title":"Glific.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"Glific.Repo.html#all/2","title":"Glific.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"Glific.Repo.html#checkout/2","title":"Glific.Repo.checkout/2","type":"function"},{"doc":"","ref":"Glific.Repo.html#child_spec/1","title":"Glific.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"Glific.Repo.html#config/0","title":"Glific.Repo.config/0","type":"function"},{"doc":"We use this function also in most list_OBJECT api's, where we process the the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#count_filter/4","title":"Glific.Repo.count_filter/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"Glific.Repo.html#delete/2","title":"Glific.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"Glific.Repo.html#delete!/2","title":"Glific.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"Glific.Repo.html#delete_all/2","title":"Glific.Repo.delete_all/2","type":"function"},{"doc":"In Join tables we rarely use the table id. We always know the object ids and hence more convenient to delete an entry via its object ids.","ref":"Glific.Repo.html#delete_relationships_by_ids/2","title":"Glific.Repo.delete_relationships_by_ids/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"Glific.Repo.html#exists?/2","title":"Glific.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query.See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Glific.Repo.html#explain/3","title":"Glific.Repo.explain/3","type":"function"},{"doc":"Glific version of get, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch/3","title":"Glific.Repo.fetch/3","type":"function"},{"doc":"Glific version of get_by, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch_by/3","title":"Glific.Repo.fetch_by/3","type":"function"},{"doc":"Add all the common filters here, rather than in each file","ref":"Glific.Repo.html#filter_with/2","title":"Glific.Repo.filter_with/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"Glific.Repo.html#get/3","title":"Glific.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"Glific.Repo.html#get!/3","title":"Glific.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"Glific.Repo.html#get_by/3","title":"Glific.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"Glific.Repo.html#get_by!/3","title":"Glific.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"Glific.Repo.html#get_dynamic_repo/0","title":"Glific.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"Glific.Repo.html#in_transaction?/0","title":"Glific.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"Glific.Repo.html#insert/2","title":"Glific.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"Glific.Repo.html#insert!/2","title":"Glific.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"Glific.Repo.html#insert_all/3","title":"Glific.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"Glific.Repo.html#insert_or_update/2","title":"Glific.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"Glific.Repo.html#insert_or_update!/2","title":"Glific.Repo.insert_or_update!/2","type":"function"},{"doc":"Get map of field (typically label) to ids for easier lookup for various system objects - language, tag","ref":"Glific.Repo.html#label_id_map/4","title":"Glific.Repo.label_id_map/4","type":"function"},{"doc":"Extracts the limit offset field, and adds to query","ref":"Glific.Repo.html#limit_offset/2","title":"Glific.Repo.limit_offset/2","type":"function"},{"doc":"We use this function in most list_OBJECT api's, where we process the opts and the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#list_filter/5","title":"Glific.Repo.list_filter/5","type":"function"},{"doc":"This function builds the query, and is used in places where we want to layer permissioning on top of the query","ref":"Glific.Repo.html#list_filter_query/4","title":"Glific.Repo.list_filter_query/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"Glific.Repo.html#load/2","title":"Glific.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"Glific.Repo.html#one/2","title":"Glific.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"Glific.Repo.html#one!/2","title":"Glific.Repo.one!/2","type":"function"},{"doc":"A funtion which handles the order clause for a data type that has a 'name/body/label' in its schema (which is true for a fair number of Glific's data types)","ref":"Glific.Repo.html#opts_with_field/3","title":"Glific.Repo.opts_with_field/3","type":"function"},{"doc":"An empty function for objects that ignore the opts","ref":"Glific.Repo.html#opts_with_nil/2","title":"Glific.Repo.opts_with_nil/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"Glific.Repo.html#preload/3","title":"Glific.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"Glific.Repo.html#put_dynamic_repo/1","title":"Glific.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"Glific.Repo.html#query/3","title":"Glific.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Glific.Repo.html#query!/3","title":"Glific.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2.","ref":"Glific.Repo.html#reload/2","title":"Glific.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2.","ref":"Glific.Repo.html#reload!/2","title":"Glific.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"Glific.Repo.html#rollback/1","title":"Glific.Repo.rollback/1","type":"function"},{"doc":"Can we skip checking permissions for this user. This eliminates a DB call in many a case","ref":"Glific.Repo.html#skip_permission?/1","title":"Glific.Repo.skip_permission?/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"Glific.Repo.html#start_link/1","title":"Glific.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"Glific.Repo.html#stop/1","title":"Glific.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"Glific.Repo.html#stream/2","title":"Glific.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Glific.Repo.html#to_sql/2","title":"Glific.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"Glific.Repo.html#transaction/2","title":"Glific.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"Glific.Repo.html#update/2","title":"Glific.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"Glific.Repo.html#update!/2","title":"Glific.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"Glific.Repo.html#update_all/3","title":"Glific.Repo.update_all/3","type":"function"},{"doc":"Glific interface to Postgres's full text search","ref":"Glific.Search.Full.html","title":"Glific.Search.Full","type":"module"},{"doc":"Simple wrapper function which calls a helper function after normalizing and sanitizing the input. The two functions combined serve to augment the query with the link to the fulltext index","ref":"Glific.Search.Full.html#run/3","title":"Glific.Search.Full.run/3","type":"function"},{"doc":"The Searches context.","ref":"Glific.Searches.html","title":"Glific.Searches","type":"module"},{"doc":"Add permissioning specific to searches, in this case we want to restrict the visibility of contact ids where message is the main query table","ref":"Glific.Searches.html#add_permission/2","title":"Glific.Searches.add_permission/2","type":"function"},{"doc":"Add permissioning specific to searches, in this case we want to restrict the visibility of contact ids where the contact is the main query table","ref":"Glific.Searches.html#add_permission_contact/2","title":"Glific.Searches.add_permission_contact/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking search changes.Examplesiex&gt; change_saved_search(search) %Ecto.Changeset{data: %Search{}}","ref":"Glific.Searches.html#change_saved_search/2","title":"Glific.Searches.change_saved_search/2","type":"function"},{"doc":"Given a jsonb string, typically either from the database, or maybe via graphql convert the string keys to atoms","ref":"Glific.Searches.html#convert_to_atom/1","title":"Glific.Searches.convert_to_atom/1","type":"function"},{"doc":"Returns the count of searches, using the same filter as list_saved_searches","ref":"Glific.Searches.html#count_saved_searches/1","title":"Glific.Searches.count_saved_searches/1","type":"function"},{"doc":"Creates a search.Examplesiex&gt; create_saved_search(%{field: value}) {:ok, %SavedSearch{}} iex&gt; create_saved_search(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#create_saved_search/1","title":"Glific.Searches.create_saved_search/1","type":"function"},{"doc":"Deletes a search.Examplesiex&gt; delete_saved_search(search) {:ok, %SavedSearch{}} iex&gt; delete_saved_search(search) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#delete_saved_search/1","title":"Glific.Searches.delete_saved_search/1","type":"function"},{"doc":"Gets a single search.Raises Ecto.NoResultsError if the SavedSearch does not exist.Examplesiex&gt; get_saved_search!(123) %SavedSearch{} iex&gt; get_saved_search!(456) ** (Ecto.NoResultsError)","ref":"Glific.Searches.html#get_saved_search!/1","title":"Glific.Searches.get_saved_search!/1","type":"function"},{"doc":"Returns the list of searches.Examplesiex&gt; list_saved_searches() [%SavedSearch{}, ...]","ref":"Glific.Searches.html#list_saved_searches/1","title":"Glific.Searches.list_saved_searches/1","type":"function"},{"doc":"Execute a saved search, if term is sent in, it is added to the saved search. Either return conversations or count","ref":"Glific.Searches.html#saved_search_count/1","title":"Glific.Searches.saved_search_count/1","type":"function"},{"doc":"Full text search interface via Postgres","ref":"Glific.Searches.html#search/2","title":"Glific.Searches.search/2","type":"function"},{"doc":"Search across multiple tables, and return a multiple context result back to the frontend. First step in emulating a whatsapp search","ref":"Glific.Searches.html#search_multi/2","title":"Glific.Searches.search_multi/2","type":"function"},{"doc":"Updates a search.Examplesiex&gt; update_saved_search(search, %{field: new_value}) {:ok, %SavedSearch{}} iex&gt; update_saved_search(search, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Searches.html#update_saved_search/2","title":"Glific.Searches.update_saved_search/2","type":"function"},{"doc":"Module for checking collection count","ref":"Glific.Searches.CollectionCount.html","title":"Glific.Searches.CollectionCount","type":"module"},{"doc":"Do it in one query for all organizations for each of Unread, Not Responded, Not Replied and OptOut","ref":"Glific.Searches.CollectionCount.html#collection_stats/2","title":"Glific.Searches.CollectionCount.collection_stats/2","type":"function"},{"doc":"The minimal wrapper for the base Saved Search structure","ref":"Glific.Searches.SavedSearch.html","title":"Glific.Searches.SavedSearch","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Searches.SavedSearch.html#changeset/2","title":"Glific.Searches.SavedSearch.changeset/2","type":"function"},{"doc":"","ref":"Glific.Searches.SavedSearch.html#t:t/0","title":"Glific.Searches.SavedSearch.t/0","type":"type"},{"doc":"The Glific Abstraction to represent the conversation with a user. This unifies a vast majority of the glific data types including: message, contact, and tag","ref":"Glific.Searches.Search.html","title":"Glific.Searches.Search","type":"module"},{"doc":"Create a new conversation. A contact is required for the conversation. Messages can be added later on","ref":"Glific.Searches.Search.html#new/3","title":"Glific.Searches.Search.new/3","type":"function"},{"doc":"","ref":"Glific.Searches.Search.html#t:t/0","title":"Glific.Searches.Search.t/0","type":"type"},{"doc":"First experiments with PhilColumns. Hopefully it will work","ref":"Glific.Seeds.Seed.html","title":"Glific.Seeds.Seed","type":"module"},{"doc":"Our first attempt at a deployment seeder script. Wish us luck","ref":"Glific.Seeds.Seeder.html","title":"Glific.Seeds.Seeder","type":"module"},{"doc":"Script for populating the database. We can call this from tests and/or /priv/repo","ref":"Glific.Seeds.SeedsDev.html","title":"Glific.Seeds.SeedsDev","type":"module"},{"doc":"Function to populate some basic data that we need for the system to operate. We will split this function up into multiple different ones for test, dev and production","ref":"Glific.Seeds.SeedsDev.html#seed/0","title":"Glific.Seeds.SeedsDev.seed/0","type":"function"},{"doc":"Smaller functions to seed various tables. This allows the test functions to call specific seeder functions. In the next phase we will also add unseeder functions as we learn more of the test capabilities","ref":"Glific.Seeds.SeedsDev.html#seed_tag/1","title":"Glific.Seeds.SeedsDev.seed_tag/1","type":"function"},{"doc":"One shot migration of data to add simulators and saas admin. We use the functions in this file to add simulators for new organizations as they are created","ref":"Glific.Seeds.SeedsMigration.html","title":"Glific.Seeds.SeedsMigration","type":"module"},{"doc":"Add a saas user for the organization. We need to check if it already exists since this code is used during data migration and can be repeated for the same organization","ref":"Glific.Seeds.SeedsMigration.html#add_saas_user/2","title":"Glific.Seeds.SeedsMigration.add_saas_user/2","type":"function"},{"doc":"Reset message number for a list of organizations or for a org_id","ref":"Glific.Seeds.SeedsMigration.html#fix_message_number/1","title":"Glific.Seeds.SeedsMigration.fix_message_number/1","type":"function"},{"doc":"Public interface to do a seed migration across all organizations.One function to rule them all. This function is invoked manually by a glific developer to add data from the DB. This seems the cleanest way to do such things. We use phases to seperate different migrations","ref":"Glific.Seeds.SeedsMigration.html#migrate_data/2","title":"Glific.Seeds.SeedsMigration.migrate_data/2","type":"function"},{"doc":"Script for importing optin contacts for an organization","ref":"Glific.Seeds.SeedsOptins.html","title":"Glific.Seeds.SeedsOptins","type":"module"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#delete/3","title":"Glific.Seeds.SeedsOptins.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#delete!/3","title":"Glific.Seeds.SeedsOptins.delete!/3","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#get/3","title":"Glific.Seeds.SeedsOptins.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#get!/3","title":"Glific.Seeds.SeedsOptins.get!/3","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#head/3","title":"Glific.Seeds.SeedsOptins.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#head!/3","title":"Glific.Seeds.SeedsOptins.head!/3","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#options/3","title":"Glific.Seeds.SeedsOptins.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#options!/3","title":"Glific.Seeds.SeedsOptins.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#patch/4","title":"Glific.Seeds.SeedsOptins.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#patch!/4","title":"Glific.Seeds.SeedsOptins.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#post/4","title":"Glific.Seeds.SeedsOptins.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#post!/4","title":"Glific.Seeds.SeedsOptins.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#put/4","title":"Glific.Seeds.SeedsOptins.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Seeds.SeedsOptins.html#put!/4","title":"Glific.Seeds.SeedsOptins.put!/4","type":"function"},{"doc":"Perform a request.Options:method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamplesExampleApi.request(method: :get, url: &quot;/users/path&quot;) # use shortcut methods ExampleApi.get(&quot;/users/1&quot;) ExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#request/2","title":"Glific.Seeds.SeedsOptins.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Glific.Seeds.SeedsOptins.html#request!/2","title":"Glific.Seeds.SeedsOptins.request!/2","type":"function"},{"doc":"Import optin contacts from csv","ref":"Glific.Seeds.SeedsOptins.html#seed/2","title":"Glific.Seeds.SeedsOptins.seed/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#trace/3","title":"Glific.Seeds.SeedsOptins.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Seeds.SeedsOptins.html#trace!/3","title":"Glific.Seeds.SeedsOptins.trace!/3","type":"function"},{"doc":"","ref":"Glific.Seeds.SeedsOptins.html#t:option/0","title":"Glific.Seeds.SeedsOptins.option/0","type":"type"},{"doc":"Script for populating the database at scale","ref":"Glific.Seeds.SeedsScale.html","title":"Glific.Seeds.SeedsScale","type":"module"},{"doc":"The Settings context. This includes language for now.","ref":"Glific.Settings.html","title":"Glific.Settings","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking language changes.Examplesiex&gt; change_language(language) %Ecto.Changeset{data: %Language{}}","ref":"Glific.Settings.html#change_language/2","title":"Glific.Settings.change_language/2","type":"function"},{"doc":"Return the count of languages, using the same filter as list_languages","ref":"Glific.Settings.html#count_languages/1","title":"Glific.Settings.count_languages/1","type":"function"},{"doc":"Creates a language.Examplesiex&gt; create_language(%{field: value}) {:ok, %Language{}} iex&gt; create_language(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#create_language/1","title":"Glific.Settings.create_language/1","type":"function"},{"doc":"Deletes a language.Examplesiex&gt; delete_language(language) {:ok, %Language{}} iex&gt; delete_language(language) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#delete_language/1","title":"Glific.Settings.delete_language/1","type":"function"},{"doc":"Gets a single language.Raises Ecto.NoResultsError if the Language does not exist.Examplesiex&gt; get_language!(123) %Language{} iex&gt; get_language!(456) ** (Ecto.NoResultsError)","ref":"Glific.Settings.html#get_language!/1","title":"Glific.Settings.get_language!/1","type":"function"},{"doc":"Get language from label or shortcode","ref":"Glific.Settings.html#get_language_by_label_or_locale/1","title":"Glific.Settings.get_language_by_label_or_locale/1","type":"function"},{"doc":"Upserts a language based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Settings.html#language_upsert/1","title":"Glific.Settings.language_upsert/1","type":"function"},{"doc":"Returns the list of languages.Examplesiex&gt; list_languages() [%Language{}, ...]","ref":"Glific.Settings.html#list_languages/1","title":"Glific.Settings.list_languages/1","type":"function"},{"doc":"Get map of localte to ids for easier lookup for json based flow editor","ref":"Glific.Settings.html#locale_id_map/0","title":"Glific.Settings.locale_id_map/0","type":"function"},{"doc":"Updates a language.Examplesiex&gt; update_language(language, %{field: new_value}) {:ok, %Language{}} iex&gt; update_language(language, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Settings.html#update_language/2","title":"Glific.Settings.update_language/2","type":"function"},{"doc":"Ecto schema and minimal interface for the languages table","ref":"Glific.Settings.Language.html","title":"Glific.Settings.Language","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Settings.Language.html#changeset/2","title":"Glific.Settings.Language.changeset/2","type":"function"},{"doc":"Delete changeset pattern we use for all data types","ref":"Glific.Settings.Language.html#delete_changeset/1","title":"Glific.Settings.Language.delete_changeset/1","type":"function"},{"doc":"","ref":"Glific.Settings.Language.html#t:t/0","title":"Glific.Settings.Language.t/0","type":"type"},{"doc":"The API for a generic tagging system on messages that coordinate with different types of taggers. The proposed taggers are: Numeric Keyword EmojisPositive Negative AutomatedCompliments Good Bye Greeting Thank You Welcome Spam","ref":"Glific.Taggers.html","title":"Glific.Taggers","type":"module"},{"doc":"Cache all the maps needed by the automation engines. Also include ability to reset the cache when tags are updated","ref":"Glific.Taggers.html#get_tag_maps/1","title":"Glific.Taggers.get_tag_maps/1","type":"function"},{"doc":"Reset the cache, typically called when tags are either created or updated","ref":"Glific.Taggers.html#reset_tag_maps/1","title":"Glific.Taggers.reset_tag_maps/1","type":"function"},{"doc":"This module is user driven via keywords associated with tags. It reads in all the keywords associated with each tag in the DB and matches it to the input text.","ref":"Glific.Taggers.Keyword.html","title":"Glific.Taggers.Keyword","type":"module"},{"doc":"The numeric tagger which takes the message body and checks if the body is mainly a number in different ways including: Ordinal Numbers (0..19) Cardinal Number (Zero - Ten) Emojis (0..9) Ordinal Hindi Numbers Cardinal Hindi Numbers","ref":"Glific.Taggers.Numeric.html","title":"Glific.Taggers.Numeric","type":"module"},{"doc":"This module will be responsible for all the contact and message status tagging. Like new contacttagg and unread","ref":"Glific.Taggers.Status.html","title":"Glific.Taggers.Status","type":"module"},{"doc":"The Tags Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Tags.html","title":"Glific.Tags","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes.Examplesiex&gt; change_contact_tag(contact_tag) %Ecto.Changeset{data: %ContactTag{}}","ref":"Glific.Tags.html#change_contact_tag/2","title":"Glific.Tags.change_contact_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes.Examplesiex&gt; change_message_tag(message_tag) %Ecto.Changeset{data: %MessageTag{}}","ref":"Glific.Tags.html#change_message_tag/2","title":"Glific.Tags.change_message_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking tag changes.Examplesiex&gt; change_tag(tag) %Ecto.Changeset{data: %Tag{}}","ref":"Glific.Tags.html#change_tag/2","title":"Glific.Tags.change_tag/2","type":"function"},{"doc":"Return the count of tags, using the same filter as list_tags","ref":"Glific.Tags.html#count_tags/1","title":"Glific.Tags.count_tags/1","type":"function"},{"doc":"Creates a contact.Examplesiex&gt; create_contact_tag(%{field: value}) {:ok, %Contact{}} iex&gt; create_contact_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_contact_tag/1","title":"Glific.Tags.create_contact_tag/1","type":"function"},{"doc":"Creates a message tagExamplesiex&gt; create_message_tag(%{field: value}) {:ok, %Message{}}iex&gt; create_message_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_message_tag/1","title":"Glific.Tags.create_message_tag/1","type":"function"},{"doc":"Creates a tag.Examplesiex&gt; create_tag(%{field: value}) {:ok, %Tag{}} iex&gt; create_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_tag/1","title":"Glific.Tags.create_tag/1","type":"function"},{"doc":"Creates a template tag.Examplesiex&gt; create_template_tag(%{field: value}) {:ok, %Contact{}} iex&gt; create_template_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_template_tag/1","title":"Glific.Tags.create_template_tag/1","type":"function"},{"doc":"Deletes a list of contact tags, each tag attached to the same contact","ref":"Glific.Tags.html#delete_contact_tag_by_ids/2","title":"Glific.Tags.delete_contact_tag_by_ids/2","type":"function"},{"doc":"In Join tables we rarely use the table id. We always know the object ids and hence more convenient to delete an entry via its object ids. We will generalize this function and move it to Repo.ex when we get a better handle on how to do so :)","ref":"Glific.Tags.html#delete_message_tag_by_ids/3","title":"Glific.Tags.delete_message_tag_by_ids/3","type":"function"},{"doc":"Deletes a tag.Examplesiex&gt; delete_tag(tag) {:ok, %Tag{}} iex&gt; delete_tag(tag) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#delete_tag/1","title":"Glific.Tags.delete_tag/1","type":"function"},{"doc":"Deletes a list of template tags, each tag attached to the same template","ref":"Glific.Tags.html#delete_template_tag_by_ids/2","title":"Glific.Tags.delete_template_tag_by_ids/2","type":"function"},{"doc":"Given a shortcode of tag, retrieve all the children for the tag","ref":"Glific.Tags.html#get_all_children/2","title":"Glific.Tags.get_all_children/2","type":"function"},{"doc":"Gets a single contact.Raises Ecto.NoResultsError if the Contact does not exist.Examplesiex&gt; get_contact_tag!(123) %Contact{} iex&gt; get_contact_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_contact_tag!/1","title":"Glific.Tags.get_contact_tag!/1","type":"function"},{"doc":"Gets a single message.Raises Ecto.NoResultsError if the Message does not exist.Examplesiex&gt; get_message_tag!(123) %Message{} iex&gt; get_message_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_message_tag!/1","title":"Glific.Tags.get_message_tag!/1","type":"function"},{"doc":"Gets a single tag.Raises Ecto.NoResultsError if the Tag does not exist.Examplesiex&gt; get_tag!(123) %Tag{} iex&gt; get_tag!(456) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_tag!/1","title":"Glific.Tags.get_tag!/1","type":"function"},{"doc":"Given a tag id or a list of tag ids, retrieve all the ancestors for the list_tags","ref":"Glific.Tags.html#include_all_ancestors/1","title":"Glific.Tags.include_all_ancestors/1","type":"function"},{"doc":"Converts all tag kewords into the map where keyword is the key and tag id is the value","ref":"Glific.Tags.html#keyword_map/1","title":"Glific.Tags.keyword_map/1","type":"function"},{"doc":"Returns the list of tags.Examplesiex&gt; list_tags() [%Tag{}, ...]","ref":"Glific.Tags.html#list_tags/1","title":"Glific.Tags.list_tags/1","type":"function"},{"doc":"Remove a specific tag from contact messages","ref":"Glific.Tags.html#remove_tag_from_all_message/4","title":"Glific.Tags.remove_tag_from_all_message/4","type":"function"},{"doc":"Filter all the status tag and returns as a map","ref":"Glific.Tags.html#status_map/1","title":"Glific.Tags.status_map/1","type":"function"},{"doc":"Updates a contact tag.Examplesiex&gt; update_contact_tag(contact_tag, %{field: new_value}) {:ok, %ContactTag{}} iex&gt; update_contact_tag(contact_tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_contact_tag/2","title":"Glific.Tags.update_contact_tag/2","type":"function"},{"doc":"Updates a message tag.Examplesiex&gt; update_message_tag(message_tag, %{field: new_value}) {:ok, %MessageTag{}} iex&gt; update_message_tag(message_tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_message_tag/2","title":"Glific.Tags.update_message_tag/2","type":"function"},{"doc":"Updates a tag.Examplesiex&gt; update_tag(tag, %{field: new_value}) {:ok, %Tag{}} iex&gt; update_tag(tag, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#update_tag/2","title":"Glific.Tags.update_tag/2","type":"function"},{"doc":"A pipe for managing the contact tags","ref":"Glific.Tags.ContactTag.html","title":"Glific.Tags.ContactTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.ContactTag.html#changeset/2","title":"Glific.Tags.ContactTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.ContactTag.html#t:t/0","title":"Glific.Tags.ContactTag.t/0","type":"type"},{"doc":"Simple container to hold all the contact tags we associate with one contact","ref":"Glific.Tags.ContactTags.html","title":"Glific.Tags.ContactTags","type":"module"},{"doc":"Creates and/or deletes a list of contact tags, each tag attached to the same contact","ref":"Glific.Tags.ContactTags.html#update_contact_tags/1","title":"Glific.Tags.ContactTags.update_contact_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.ContactTags.html#t:t/0","title":"Glific.Tags.ContactTags.t/0","type":"type"},{"doc":"A file for managing the join table message tags","ref":"Glific.Tags.MessageTag.html","title":"Glific.Tags.MessageTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.MessageTag.html#changeset/2","title":"Glific.Tags.MessageTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTag.html#t:t/0","title":"Glific.Tags.MessageTag.t/0","type":"type"},{"doc":"Simple container to hold all the message tags we associate with one message","ref":"Glific.Tags.MessageTags.html","title":"Glific.Tags.MessageTags","type":"module"},{"doc":"Creates and/or deletes a list of message tags, each tag attached to the same message","ref":"Glific.Tags.MessageTags.html#update_message_tags/1","title":"Glific.Tags.MessageTags.update_message_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTags.html#t:t/0","title":"Glific.Tags.MessageTags.t/0","type":"type"},{"doc":"The minimal wrapper for the base Tag structure","ref":"Glific.Tags.Tag.html","title":"Glific.Tags.Tag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.Tag.html#changeset/2","title":"Glific.Tags.Tag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.Tag.html#t:t/0","title":"Glific.Tags.Tag.t/0","type":"type"},{"doc":"A pipe for managing the template tags","ref":"Glific.Tags.TemplateTag.html","title":"Glific.Tags.TemplateTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.TemplateTag.html#changeset/2","title":"Glific.Tags.TemplateTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.TemplateTag.html#t:t/0","title":"Glific.Tags.TemplateTag.t/0","type":"type"},{"doc":"Simple container to hold all the template tags we associate with one template","ref":"Glific.Tags.TemplateTags.html","title":"Glific.Tags.TemplateTags","type":"module"},{"doc":"Creates and/or deletes a list of template tags, each tag attached to the same template","ref":"Glific.Tags.TemplateTags.html#update_template_tags/1","title":"Glific.Tags.TemplateTags.update_template_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.TemplateTags.html#t:t/0","title":"Glific.Tags.TemplateTags.t/0","type":"type"},{"doc":"The Templates context.","ref":"Glific.Templates.html","title":"Glific.Templates","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking session_template changes.Examplesiex&gt; change_session_template(session_template) %Ecto.Changeset{data: %SessionTemplate{}}","ref":"Glific.Templates.html#change_session_template/2","title":"Glific.Templates.change_session_template/2","type":"function"},{"doc":"Return the count of session_templates, using the same filter as list_session_templates","ref":"Glific.Templates.html#count_session_templates/1","title":"Glific.Templates.count_session_templates/1","type":"function"},{"doc":"Creates a session_template.Examplesiex&gt; create_session_template(%{field: value}) {:ok, %SessionTemplate{}} iex&gt; create_session_template(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#create_session_template/1","title":"Glific.Templates.create_session_template/1","type":"function"},{"doc":"Create a session template form message Body and type will be the message attributes","ref":"Glific.Templates.html#create_template_from_message/1","title":"Glific.Templates.create_template_from_message/1","type":"function"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#delete/3","title":"Glific.Templates.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#delete!/3","title":"Glific.Templates.delete!/3","type":"function"},{"doc":"Deletes a session_template.Examplesiex&gt; delete_session_template(session_template) {:ok, %SessionTemplate{}} iex&gt; delete_session_template(session_template) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#delete_session_template/1","title":"Glific.Templates.delete_session_template/1","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#get/3","title":"Glific.Templates.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#get!/3","title":"Glific.Templates.get!/3","type":"function"},{"doc":"Gets a single session_template.Raises Ecto.NoResultsError if the SessionTemplate does not exist.Examplesiex&gt; get_session_template!(123) %SessionTemplate{} iex&gt; get_session_template!(456) ** (Ecto.NoResultsError)","ref":"Glific.Templates.html#get_session_template!/1","title":"Glific.Templates.get_session_template!/1","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#head/3","title":"Glific.Templates.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#head!/3","title":"Glific.Templates.head!/3","type":"function"},{"doc":"Returns the list of session_templates.Examplesiex&gt; list_session_templates() [%SessionTemplate{}, ...]","ref":"Glific.Templates.html#list_session_templates/1","title":"Glific.Templates.list_session_templates/1","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#options/3","title":"Glific.Templates.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#options!/3","title":"Glific.Templates.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#patch/4","title":"Glific.Templates.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#patch!/4","title":"Glific.Templates.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#post/4","title":"Glific.Templates.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#post!/4","title":"Glific.Templates.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#put/4","title":"Glific.Templates.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Glific.Templates.html#put!/4","title":"Glific.Templates.put!/4","type":"function"},{"doc":"Perform a request.Options:method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamplesExampleApi.request(method: :get, url: &quot;/users/path&quot;) # use shortcut methods ExampleApi.get(&quot;/users/1&quot;) ExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#request/2","title":"Glific.Templates.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Glific.Templates.html#request!/2","title":"Glific.Templates.request!/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#trace/3","title":"Glific.Templates.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;, body: %{name: &quot;Jon&quot;})","ref":"Glific.Templates.html#trace!/3","title":"Glific.Templates.trace!/3","type":"function"},{"doc":"get and update list of hsm of an organization","ref":"Glific.Templates.html#update_hsms/1","title":"Glific.Templates.update_hsms/1","type":"function"},{"doc":"Updates a session_template.Examplesiex&gt; update_session_template(session_template, %{field: new_value}) {:ok, %SessionTemplate{}} iex&gt; update_session_template(session_template, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Templates.html#update_session_template/2","title":"Glific.Templates.update_session_template/2","type":"function"},{"doc":"","ref":"Glific.Templates.html#t:option/0","title":"Glific.Templates.option/0","type":"type"},{"doc":"The trigger manager for all the trigger system that starts flows within Glific","ref":"Glific.Triggers.html","title":"Glific.Triggers","type":"module"},{"doc":"Periodic call to execute the triggers outstanding for the day","ref":"Glific.Triggers.html#execute_triggers/2","title":"Glific.Triggers.execute_triggers/2","type":"function"},{"doc":"The trigger helper for the trigger system that deals with the complexity of time queries","ref":"Glific.Triggers.Helper.html","title":"Glific.Triggers.Helper","type":"module"},{"doc":"Given a time and the frequency of occurence, compute the next time the event can potentially occur","ref":"Glific.Triggers.Helper.html#compute_next/1","title":"Glific.Triggers.Helper.compute_next/1","type":"function"},{"doc":"The Users context.","ref":"Glific.Users.html","title":"Glific.Users","type":"module"},{"doc":"Return the count of users, using the same filter as list_users","ref":"Glific.Users.html#count_users/1","title":"Glific.Users.count_users/1","type":"function"},{"doc":"Callback implementation for Pow.Context.create/1.","ref":"Glific.Users.html#create/1","title":"Glific.Users.create/1","type":"function"},{"doc":"Creates a user.Examplesiex&gt; create_user(%{field: value}) {:ok, %User{}} iex&gt; create_user(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#create_user/1","title":"Glific.Users.create_user/1","type":"function"},{"doc":"Callback implementation for Pow.Context.delete/1.","ref":"Glific.Users.html#delete/1","title":"Glific.Users.delete/1","type":"function"},{"doc":"Deletes a user.Examplesiex&gt; delete_user(user) {:ok, %User{}} iex&gt; delete_user(user) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#delete_user/1","title":"Glific.Users.delete_user/1","type":"function"},{"doc":"Callback implementation for Pow.Context.get_by/1.","ref":"Glific.Users.html#get_by/1","title":"Glific.Users.get_by/1","type":"function"},{"doc":"Gets a single user.Raises Ecto.NoResultsError if the User does not exist.Examplesiex&gt; get_user!(123) %User{} iex&gt; get_user!(456) ** (Ecto.NoResultsError)","ref":"Glific.Users.html#get_user!/1","title":"Glific.Users.get_user!/1","type":"function"},{"doc":"Returns the list of filtered users.Examplesiex&gt; list_users() [%User{}, ...]","ref":"Glific.Users.html#list_users/1","title":"Glific.Users.list_users/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_authenticate/1","title":"Glific.Users.pow_authenticate/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_create/1","title":"Glific.Users.pow_create/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_delete/1","title":"Glific.Users.pow_delete/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_get_by/1","title":"Glific.Users.pow_get_by/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_update/2","title":"Glific.Users.pow_update/2","type":"function"},{"doc":"Reset user password","ref":"Glific.Users.html#reset_user_password/2","title":"Glific.Users.reset_user_password/2","type":"function"},{"doc":"Callback implementation for Pow.Context.update/2.","ref":"Glific.Users.html#update/2","title":"Glific.Users.update/2","type":"function"},{"doc":"Updates a user.Examplesiex&gt; update_user(user, %{field: new_value}) {:ok, %User{}} iex&gt; update_user(user, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Users.html#update_user/2","title":"Glific.Users.update_user/2","type":"function"},{"doc":"Cloak Vault","ref":"Glific.Vault.html","title":"Glific.Vault","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Glific.Vault.html#child_spec/1","title":"Glific.Vault.child_spec/1","type":"function"},{"doc":"","ref":"Glific.Vault.html#start_link/1","title":"Glific.Vault.start_link/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use GlificWeb, :controller use GlificWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"GlificWeb.html","title":"GlificWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"GlificWeb.html#__using__/1","title":"GlificWeb.__using__/1","type":"macro"},{"doc":"","ref":"GlificWeb.html#channel/0","title":"GlificWeb.channel/0","type":"function"},{"doc":"","ref":"GlificWeb.html#controller/0","title":"GlificWeb.controller/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_component/0","title":"GlificWeb.live_component/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_view/0","title":"GlificWeb.live_view/0","type":"function"},{"doc":"","ref":"GlificWeb.html#router/0","title":"GlificWeb.router/0","type":"function"},{"doc":"","ref":"GlificWeb.html#view/0","title":"GlificWeb.view/0","type":"function"},{"doc":"The Pow User Registration Controller","ref":"GlificWeb.API.V1.RegistrationController.html","title":"GlificWeb.API.V1.RegistrationController","type":"module"},{"doc":"Function for generating verification code and sending otp verification message","ref":"GlificWeb.API.V1.RegistrationController.html#create_and_send_verification_code/1","title":"GlificWeb.API.V1.RegistrationController.create_and_send_verification_code/1","type":"function"},{"doc":"Controller function for reset password It also verifies OTP to authorize the request","ref":"GlificWeb.API.V1.RegistrationController.html#reset_password/2","title":"GlificWeb.API.V1.RegistrationController.reset_password/2","type":"function"},{"doc":"The Pow User Session Controller","ref":"GlificWeb.API.V1.SessionController.html","title":"GlificWeb.API.V1.SessionController","type":"module"},{"doc":"PoW error handler for API Authentication","ref":"GlificWeb.APIAuthErrorHandler.html","title":"GlificWeb.APIAuthErrorHandler","type":"module"},{"doc":"Setting the absinthe context, so we can store the current user there","ref":"GlificWeb.Context.html","title":"GlificWeb.Context","type":"module"},{"doc":"Return the current user context based on the authorization header","ref":"GlificWeb.Context.html#build_context/1","title":"GlificWeb.Context.build_context/1","type":"function"},{"doc":"This is a basic plug that ensure the organization is loaded.To plug it on your router, you can use:plug GlificWeb.EnsurePlug, callback: &amp;OrganizationHelper.callback/2 failure_callback: &amp;OrganizationHelper.failure_callback/2See GlificWeb.EnsurePlugConfig to check all the allowed config flags.","ref":"GlificWeb.EnsurePlug.html","title":"GlificWeb.EnsurePlug","type":"module"},{"doc":"This is a struct that holds the configuration for GlificWeb.EnsurePlug.Here are the config keys allowed:assign: the name of the assign where we must save the organization.callback: function that might be called when the plug succeeded. It must return a connection.failure_callback: function that might be called when the plug failed. It must return a connection.","ref":"GlificWeb.EnsurePlugConfig.html","title":"GlificWeb.EnsurePlugConfig","type":"module"},{"doc":"","ref":"GlificWeb.EnsurePlugConfig.html#t:t/0","title":"GlificWeb.EnsurePlugConfig.t/0","type":"type"},{"doc":"Conveniences for translating and building error messages.","ref":"GlificWeb.ErrorHelpers.html","title":"GlificWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"GlificWeb.ErrorHelpers.html#error_tag/2","title":"GlificWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"GlificWeb.ErrorHelpers.html#translate_error/1","title":"GlificWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"GlificWeb.ErrorView.html","title":"GlificWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"GlificWeb.ErrorView.html#__resource__/0","title":"GlificWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"GlificWeb.ErrorView.html#render/2","title":"GlificWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"GlificWeb.ErrorView.html#template_not_found/2","title":"GlificWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"The Flow Editor Controller","ref":"GlificWeb.Flows.FlowEditorController.html","title":"GlificWeb.Flows.FlowEditorController","type":"module"},{"doc":"This is used to checking if the connection between frontend and backend is established or not.","ref":"GlificWeb.Flows.FlowEditorController.html#activity/2","title":"GlificWeb.Flows.FlowEditorController.activity/2","type":"function"},{"doc":"A list of all the communication channels. For Glific it's just WhatsApp. We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#channels/2","title":"GlificWeb.Flows.FlowEditorController.channels/2","type":"function"},{"doc":"A list of all the NLP classifiers. For Glific it's just WhatsApp. We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#classifiers/2","title":"GlificWeb.Flows.FlowEditorController.classifiers/2","type":"function"},{"doc":"instead of reading a file we can call it directly from Assets. We will come back on that when we have more clearity of the use cases","ref":"GlificWeb.Flows.FlowEditorController.html#completion/2","title":"GlificWeb.Flows.FlowEditorController.completion/2","type":"function"},{"doc":"Add Contact fields into the database. The response should be a map with 3 keys % { Key: Field name, name: Field display name value_type: type of the value}We are not supporting this for now. We will add that in future","ref":"GlificWeb.Flows.FlowEditorController.html#fields_post/2","title":"GlificWeb.Flows.FlowEditorController.fields_post/2","type":"function"},{"doc":"Let's get all the flows or a latest flow revision","ref":"GlificWeb.Flows.FlowEditorController.html#flows/2","title":"GlificWeb.Flows.FlowEditorController.flows/2","type":"function"},{"doc":"all the supported funcations we provide","ref":"GlificWeb.Flows.FlowEditorController.html#functions/2","title":"GlificWeb.Flows.FlowEditorController.functions/2","type":"function"},{"doc":"Get all the tags so that user can apply them on incoming message. We are not supporting this for now. To enable It should return a list of map having uuid and name as keys [%{uuid: tag.uuid, name: tag.label}]","ref":"GlificWeb.Flows.FlowEditorController.html#labels/2","title":"GlificWeb.Flows.FlowEditorController.labels/2","type":"function"},{"doc":"Store a label (new tag) in the system. The return response should be a map of 3 keys. [%{uuid: tag.uuid, name: params[&quot;name&quot;], count}]We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#labels_post/2","title":"GlificWeb.Flows.FlowEditorController.labels_post/2","type":"function"},{"doc":"We are not using this for now but this is required for flow editor config.","ref":"GlificWeb.Flows.FlowEditorController.html#resthooks/2","title":"GlificWeb.Flows.FlowEditorController.resthooks/2","type":"function"},{"doc":"Get all or a specific revision for a flow","ref":"GlificWeb.Flows.FlowEditorController.html#revisions/2","title":"GlificWeb.Flows.FlowEditorController.revisions/2","type":"function"},{"doc":"Save a revision for a flow and get the revision id","ref":"GlificWeb.Flows.FlowEditorController.html#save_revisions/2","title":"GlificWeb.Flows.FlowEditorController.save_revisions/2","type":"function"},{"doc":"We are not sure how to use this but this endpoint is required for flow editor. Will come back to this in future.","ref":"GlificWeb.Flows.FlowEditorController.html#ticketers/2","title":"GlificWeb.Flows.FlowEditorController.ticketers/2","type":"function"},{"doc":"Validate media to send as attachment","ref":"GlificWeb.Flows.FlowEditorController.html#validate_media/2","title":"GlificWeb.Flows.FlowEditorController.validate_media/2","type":"function"},{"doc":"Experimental approach on trying to handle webhooks for NGOs within the system. This bypasses using a third party and hence makes things a lot more efficient","ref":"GlificWeb.Flows.WebhookController.html","title":"GlificWeb.Flows.WebhookController","type":"module"},{"doc":"Example implementation of survey computation for STiR","ref":"GlificWeb.Flows.WebhookController.html#stir_survey/2","title":"GlificWeb.Flows.WebhookController.stir_survey/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import GlificWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"GlificWeb.Gettext.html","title":"GlificWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"GlificWeb.Gettext.html#dgettext/3","title":"GlificWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"GlificWeb.Gettext.html#dgettext_noop/2","title":"GlificWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"GlificWeb.Gettext.html#dngettext/5","title":"GlificWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"GlificWeb.Gettext.html#dngettext_noop/3","title":"GlificWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"GlificWeb.Gettext.html#dpgettext/4","title":"GlificWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpgettext_noop/3","title":"GlificWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"GlificWeb.Gettext.html#dpngettext/6","title":"GlificWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpngettext_noop/4","title":"GlificWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"GlificWeb.Gettext.html#gettext/2","title":"GlificWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"GlificWeb.Gettext.html#gettext_comment/1","title":"GlificWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"GlificWeb.Gettext.html#gettext_noop/1","title":"GlificWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"GlificWeb.Gettext.html#handle_missing_bindings/2","title":"GlificWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"GlificWeb.Gettext.html#handle_missing_plural_translation/6","title":"GlificWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"GlificWeb.Gettext.html#handle_missing_translation/4","title":"GlificWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lgettext/5","title":"GlificWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lngettext/7","title":"GlificWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"GlificWeb.Gettext.html#ngettext/4","title":"GlificWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"GlificWeb.Gettext.html#ngettext_noop/2","title":"GlificWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"GlificWeb.Gettext.html#pgettext/3","title":"GlificWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pgettext_noop/2","title":"GlificWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"GlificWeb.Gettext.html#pngettext/5","title":"GlificWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pngettext_noop/3","title":"GlificWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"Code to cache the raw body in a conn variable before being processed by Phoenix. Used to validate the signature","ref":"GlificWeb.Misc.BodyReader.html","title":"GlificWeb.Misc.BodyReader","type":"module"},{"doc":"Store the raw body in the conn assigns array","ref":"GlificWeb.Misc.BodyReader.html#cache_raw_body/2","title":"GlificWeb.Misc.BodyReader.cache_raw_body/2","type":"function"},{"doc":"Verify that the signature matches from the incoming webhook","ref":"GlificWeb.Misc.HTTPSignature.html","title":"GlificWeb.Misc.HTTPSignature","type":"module"},{"doc":"This file and the below files have been &quot;borrowed and modified&quot; from triplex: https://github.com/ateliware/triplex The original copyright and license - MIT belong to the authors and contributors of Triplexplug.exensure_plug.exensure_plug_config.exsubdomain_plug.exsubdomain_plug_config.exparam_plug.exparam_plug_config.exThis module have some basic functions for our triplex plugs.The plugs we have for now are:GlificWeb.ParamPlug - loads the organization from a body or query paramGlificWeb.SubdomainPlug - loads the organization from the url subdomainGlificWeb.EnsurePlug - ensures the current organization is loaded and halts if not","ref":"GlificWeb.Plug.html","title":"GlificWeb.Plug","type":"module"},{"doc":"Ensure the organization is loaded, and if not, halts the conn.The config map/struct must have:assign: the name of the assign where we must save the organization.","ref":"GlificWeb.Plug.html#ensure_organization/2","title":"GlificWeb.Plug.ensure_organization/2","type":"function"},{"doc":"Puts the given organization as an assign on the given conn, but only if the organization is not reserved.The config map/struct must have:organization_handler: function to handle the organization param. Its return will be used as the organization.assign: the name of the assign where we must save the organization.","ref":"GlificWeb.Plug.html#put_organization/3","title":"GlificWeb.Plug.put_organization/3","type":"function"},{"doc":"Global unauthorized error handler","ref":"GlificWeb.Plug.html#send_error/1","title":"GlificWeb.Plug.send_error/1","type":"function"},{"doc":"Dedicated controller to handle different types of inbound message form Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController","type":"module"},{"doc":"Callback audio gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#audio/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.audio/2","type":"function"},{"doc":"Callback file gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#file/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.file/2","type":"function"},{"doc":"Callback for gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#image/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.image/2","type":"function"},{"doc":"Callback for gupshup sticker image","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#sticker/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.sticker/2","type":"function"},{"doc":"Parse text message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#text/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.text/2","type":"function"},{"doc":"Callback video gupshup image images","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#video/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.video/2","type":"function"},{"doc":"Dedicated controller to handle all the message status requests like read, delivered etc..","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController","type":"module"},{"doc":"Message has been delivered to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#delivered/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.delivered/2","type":"function"},{"doc":"Message status when the message has been sent to gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#enqueued/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.enqueued/2","type":"function"},{"doc":"Message status when gupshup could not send the message to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#failed/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.failed/2","type":"function"},{"doc":"Default handle for all message event callbacks","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#handler/3","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.handler/3","type":"function"},{"doc":"Message has been read by the beneficiary","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#read/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.read/2","type":"function"},{"doc":"Message has been sent to whats app via Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#sent/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.sent/2","type":"function"},{"doc":"Dedicated controller to handle different types of user events requests like optin an optout form","ref":"GlificWeb.Providers.Gupshup.Controllers.UserEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.UserEventController","type":"module"},{"doc":"A Gupshup shunt which will redirect all the incoming requests to the gupshup router based on there event type.","ref":"GlificWeb.Providers.Gupshup.Plugs.Shunt.html","title":"GlificWeb.Providers.Gupshup.Plugs.Shunt","type":"module"},{"doc":"Build the context with the root user for all gupshup calls, this gives us permission to update contacts etc","ref":"GlificWeb.Providers.Gupshup.Plugs.Shunt.html#build_context/1","title":"GlificWeb.Providers.Gupshup.Plugs.Shunt.build_context/1","type":"function"},{"doc":"A Gupshup router which will redirect all the gupsup incoming request to there controller actions.","ref":"GlificWeb.Providers.Gupshup.Router.html","title":"GlificWeb.Providers.Gupshup.Router","type":"module"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Providers.Gupshup.Router.html#call/2","title":"GlificWeb.Providers.Gupshup.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Providers.Gupshup.Router.html#init/1","title":"GlificWeb.Providers.Gupshup.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Providers.Gupshup.Router.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html","title":"GlificWeb.Providers.Gupshup.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#url/1","title":"GlificWeb.Providers.Gupshup.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/3","type":"function"},{"doc":"Contact Resolver which sits between the GraphQL schema and Glific Contact Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Contacts.html","title":"GlificWeb.Resolvers.Contacts","type":"module"},{"doc":"Get current location of the contact","ref":"GlificWeb.Resolvers.Contacts.html#contact_location/3","title":"GlificWeb.Resolvers.Contacts.contact_location/3","type":"function"},{"doc":"Get the count of contacts filtered by args","ref":"GlificWeb.Resolvers.Contacts.html#count_contacts/3","title":"GlificWeb.Resolvers.Contacts.count_contacts/3","type":"function"},{"doc":"Upload a contact phone as opted in","ref":"GlificWeb.Resolvers.Contacts.html#optin_contact/3","title":"GlificWeb.Resolvers.Contacts.optin_contact/3","type":"function"},{"doc":"Grab a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#simulator_get/3","title":"GlificWeb.Resolvers.Contacts.simulator_get/3","type":"function"},{"doc":"Release a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#simulator_release/3","title":"GlificWeb.Resolvers.Contacts.simulator_release/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Conversation Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Conversations.html","title":"GlificWeb.Resolvers.Conversations","type":"module"},{"doc":"Get the list of conversations filtered by args For an authenticated session, we can get the current user from the context via this pattern match %{context: %{current_user: current_user}}","ref":"GlificWeb.Resolvers.Conversations.html#conversations/3","title":"GlificWeb.Resolvers.Conversations.conversations/3","type":"function"},{"doc":"Flow Resolver which sits between the GraphQL schema and Glific Flow Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Flows.html","title":"GlificWeb.Resolvers.Flows","type":"module"},{"doc":"Make a copy a flow","ref":"GlificWeb.Resolvers.Flows.html#copy_flow/3","title":"GlificWeb.Resolvers.Flows.copy_flow/3","type":"function"},{"doc":"Get the count of flows filtered by args","ref":"GlificWeb.Resolvers.Flows.html#count_flows/3","title":"GlificWeb.Resolvers.Flows.count_flows/3","type":"function"},{"doc":"Get a specific flow by id","ref":"GlificWeb.Resolvers.Flows.html#flow/3","title":"GlificWeb.Resolvers.Flows.flow/3","type":"function"},{"doc":"Get the list of flows","ref":"GlificWeb.Resolvers.Flows.html#flows/3","title":"GlificWeb.Resolvers.Flows.flows/3","type":"function"},{"doc":"Publish a flow","ref":"GlificWeb.Resolvers.Flows.html#publish_flow/3","title":"GlificWeb.Resolvers.Flows.publish_flow/3","type":"function"},{"doc":"Start a flow for a contact","ref":"GlificWeb.Resolvers.Flows.html#start_contact_flow/3","title":"GlificWeb.Resolvers.Flows.start_contact_flow/3","type":"function"},{"doc":"Start a flow for all contacts of a group","ref":"GlificWeb.Resolvers.Flows.html#start_group_flow/3","title":"GlificWeb.Resolvers.Flows.start_group_flow/3","type":"function"},{"doc":"Group Resolver which sits between the GraphQL schema and Glific Group Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Groups.html","title":"GlificWeb.Resolvers.Groups","type":"module"},{"doc":"Get count of group contacts","ref":"GlificWeb.Resolvers.Groups.html#contacts_count/3","title":"GlificWeb.Resolvers.Groups.contacts_count/3","type":"function"},{"doc":"Get the count of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#count_groups/3","title":"GlificWeb.Resolvers.Groups.count_groups/3","type":"function"},{"doc":"Creates an contact group entry","ref":"GlificWeb.Resolvers.Groups.html#create_contact_group/3","title":"GlificWeb.Resolvers.Groups.create_contact_group/3","type":"function"},{"doc":"Creates an group","ref":"GlificWeb.Resolvers.Groups.html#create_group/3","title":"GlificWeb.Resolvers.Groups.create_group/3","type":"function"},{"doc":"Creates an user group entry","ref":"GlificWeb.Resolvers.Groups.html#create_user_group/3","title":"GlificWeb.Resolvers.Groups.create_user_group/3","type":"function"},{"doc":"Deletes an group","ref":"GlificWeb.Resolvers.Groups.html#delete_group/3","title":"GlificWeb.Resolvers.Groups.delete_group/3","type":"function"},{"doc":"Get a specific group by id","ref":"GlificWeb.Resolvers.Groups.html#group/3","title":"GlificWeb.Resolvers.Groups.group/3","type":"function"},{"doc":"Get group info by id","ref":"GlificWeb.Resolvers.Groups.html#group_info/3","title":"GlificWeb.Resolvers.Groups.group_info/3","type":"function"},{"doc":"Get the list of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#groups/3","title":"GlificWeb.Resolvers.Groups.groups/3","type":"function"},{"doc":"Updates an group","ref":"GlificWeb.Resolvers.Groups.html#update_group/3","title":"GlificWeb.Resolvers.Groups.update_group/3","type":"function"},{"doc":"Get count of group users","ref":"GlificWeb.Resolvers.Groups.html#users_count/3","title":"GlificWeb.Resolvers.Groups.users_count/3","type":"function"},{"doc":"Helper funcations for GQL resolvers","ref":"GlificWeb.Resolvers.Helper.html","title":"GlificWeb.Resolvers.Helper","type":"module"},{"doc":"Will use this helper funcation to add the organization in into the filters for all the list and count funcations","ref":"GlificWeb.Resolvers.Helper.html#add_org_filter/2","title":"GlificWeb.Resolvers.Helper.add_org_filter/2","type":"function"},{"doc":"Location Resolver which sits between the GraphQL schema and Glific Location Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Locations.html","title":"GlificWeb.Resolvers.Locations","type":"module"},{"doc":"Get a specific message media by id","ref":"GlificWeb.Resolvers.Locations.html#location/3","title":"GlificWeb.Resolvers.Locations.location/3","type":"function"},{"doc":"Message Resolver which sits between the GraphQL schema and Glific Message Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Messages.html","title":"GlificWeb.Resolvers.Messages","type":"module"},{"doc":"Delete all messages of a contact","ref":"GlificWeb.Resolvers.Messages.html#clear_messages/3","title":"GlificWeb.Resolvers.Messages.clear_messages/3","type":"function"},{"doc":"Get the count of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#count_messages/3","title":"GlificWeb.Resolvers.Messages.count_messages/3","type":"function"},{"doc":"Get the count of message media","ref":"GlificWeb.Resolvers.Messages.html#count_messages_media/3","title":"GlificWeb.Resolvers.Messages.count_messages_media/3","type":"function"},{"doc":"Create and send message to contacts of a group","ref":"GlificWeb.Resolvers.Messages.html#create_and_send_message_to_group/3","title":"GlificWeb.Resolvers.Messages.create_and_send_message_to_group/3","type":"function"},{"doc":"Get a specific message by id","ref":"GlificWeb.Resolvers.Messages.html#message/3","title":"GlificWeb.Resolvers.Messages.message/3","type":"function"},{"doc":"Get a specific message media by id","ref":"GlificWeb.Resolvers.Messages.html#message_media/3","title":"GlificWeb.Resolvers.Messages.message_media/3","type":"function"},{"doc":"Get the list of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#messages/3","title":"GlificWeb.Resolvers.Messages.messages/3","type":"function"},{"doc":"Partners Resolver which sits between the GraphQL schema and Glific Partners Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Partners.html","title":"GlificWeb.Resolvers.Partners","type":"module"},{"doc":"Get a specific bsp balance by organization id","ref":"GlificWeb.Resolvers.Partners.html#bspbalance/3","title":"GlificWeb.Resolvers.Partners.bspbalance/3","type":"function"},{"doc":"Get the count of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_organizations/3","title":"GlificWeb.Resolvers.Partners.count_organizations/3","type":"function"},{"doc":"Get the count of providers filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_providers/3","title":"GlificWeb.Resolvers.Partners.count_providers/3","type":"function"},{"doc":"Creates an organization's credential","ref":"GlificWeb.Resolvers.Partners.html#create_credential/3","title":"GlificWeb.Resolvers.Partners.create_credential/3","type":"function"},{"doc":"Creates an organization","ref":"GlificWeb.Resolvers.Partners.html#create_organization/3","title":"GlificWeb.Resolvers.Partners.create_organization/3","type":"function"},{"doc":"Creates a provider","ref":"GlificWeb.Resolvers.Partners.html#create_provider/3","title":"GlificWeb.Resolvers.Partners.create_provider/3","type":"function"},{"doc":"Get organization's credential by shorcode/service","ref":"GlificWeb.Resolvers.Partners.html#credential/3","title":"GlificWeb.Resolvers.Partners.credential/3","type":"function"},{"doc":"Deletes an organization","ref":"GlificWeb.Resolvers.Partners.html#delete_organization/3","title":"GlificWeb.Resolvers.Partners.delete_organization/3","type":"function"},{"doc":"Deletes a provider","ref":"GlificWeb.Resolvers.Partners.html#delete_provider/3","title":"GlificWeb.Resolvers.Partners.delete_provider/3","type":"function"},{"doc":"Get a specific organization by id","ref":"GlificWeb.Resolvers.Partners.html#organization/3","title":"GlificWeb.Resolvers.Partners.organization/3","type":"function"},{"doc":"Get the list of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#organizations/3","title":"GlificWeb.Resolvers.Partners.organizations/3","type":"function"},{"doc":"Get a specific provider by id","ref":"GlificWeb.Resolvers.Partners.html#provider/3","title":"GlificWeb.Resolvers.Partners.provider/3","type":"function"},{"doc":"Get the list of providers","ref":"GlificWeb.Resolvers.Partners.html#providers/3","title":"GlificWeb.Resolvers.Partners.providers/3","type":"function"},{"doc":"Updates an organization's credential","ref":"GlificWeb.Resolvers.Partners.html#update_credential/3","title":"GlificWeb.Resolvers.Partners.update_credential/3","type":"function"},{"doc":"Updates an organization","ref":"GlificWeb.Resolvers.Partners.html#update_organization/3","title":"GlificWeb.Resolvers.Partners.update_organization/3","type":"function"},{"doc":"Updates a provider","ref":"GlificWeb.Resolvers.Partners.html#update_provider/3","title":"GlificWeb.Resolvers.Partners.update_provider/3","type":"function"},{"doc":"Searches Resolver which sits between the GraphQL schema and Glific saved_search Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Searches.html","title":"GlificWeb.Resolvers.Searches","type":"module"},{"doc":"Get the collection count","ref":"GlificWeb.Resolvers.Searches.html#collection_stats/3","title":"GlificWeb.Resolvers.Searches.collection_stats/3","type":"function"},{"doc":"Get the count of saved_searches","ref":"GlificWeb.Resolvers.Searches.html#count_saved_searches/3","title":"GlificWeb.Resolvers.Searches.count_saved_searches/3","type":"function"},{"doc":"Get a specific saved_search by id","ref":"GlificWeb.Resolvers.Searches.html#saved_search/3","title":"GlificWeb.Resolvers.Searches.saved_search/3","type":"function"},{"doc":"Get the list of saved_searches","ref":"GlificWeb.Resolvers.Searches.html#saved_searches/3","title":"GlificWeb.Resolvers.Searches.saved_searches/3","type":"function"},{"doc":"Settings Resolver which sits between the GraphQL schema and Glific Settings Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Settings.html","title":"GlificWeb.Resolvers.Settings","type":"module"},{"doc":"Get the count of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#count_languages/3","title":"GlificWeb.Resolvers.Settings.count_languages/3","type":"function"},{"doc":"Create a new language. Since language is a basic system data type, this operation is an upsert","ref":"GlificWeb.Resolvers.Settings.html#create_language/3","title":"GlificWeb.Resolvers.Settings.create_language/3","type":"function"},{"doc":"Get a specific language by id","ref":"GlificWeb.Resolvers.Settings.html#language/3","title":"GlificWeb.Resolvers.Settings.language/3","type":"function"},{"doc":"Get the list of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#languages/3","title":"GlificWeb.Resolvers.Settings.languages/3","type":"function"},{"doc":"Update language data fields","ref":"GlificWeb.Resolvers.Settings.html#update_language/3","title":"GlificWeb.Resolvers.Settings.update_language/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Tag Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Tags.html","title":"GlificWeb.Resolvers.Tags","type":"module"},{"doc":"Get the count of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#count_tags/3","title":"GlificWeb.Resolvers.Tags.count_tags/3","type":"function"},{"doc":"Create entry for tag mapped to template","ref":"GlificWeb.Resolvers.Tags.html#create_template_tag/3","title":"GlificWeb.Resolvers.Tags.create_template_tag/3","type":"function"},{"doc":"Get a specific tag by id","ref":"GlificWeb.Resolvers.Tags.html#tag/3","title":"GlificWeb.Resolvers.Tags.tag/3","type":"function"},{"doc":"Get the list of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#tags/3","title":"GlificWeb.Resolvers.Tags.tags/3","type":"function"},{"doc":"Creates and/or deletes a list of contact tags, each tag attached to the same contact","ref":"GlificWeb.Resolvers.Tags.html#update_contact_tags/3","title":"GlificWeb.Resolvers.Tags.update_contact_tags/3","type":"function"},{"doc":"Creates and/or deletes a list of template tags, each tag attached to the same template","ref":"GlificWeb.Resolvers.Tags.html#update_template_tags/3","title":"GlificWeb.Resolvers.Tags.update_template_tags/3","type":"function"},{"doc":"Templates Resolver which sits between the GraphQL schema and Glific Templates Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Templates.html","title":"GlificWeb.Resolvers.Templates","type":"module"},{"doc":"Get the count of sessiont templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#count_session_templates/3","title":"GlificWeb.Resolvers.Templates.count_session_templates/3","type":"function"},{"doc":"Converting a message to message template","ref":"GlificWeb.Resolvers.Templates.html#create_template_from_message/3","title":"GlificWeb.Resolvers.Templates.create_template_from_message/3","type":"function"},{"doc":"Get a specific session template by id","ref":"GlificWeb.Resolvers.Templates.html#session_template/3","title":"GlificWeb.Resolvers.Templates.session_template/3","type":"function"},{"doc":"Get the list of session templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#session_templates/3","title":"GlificWeb.Resolvers.Templates.session_templates/3","type":"function"},{"doc":"Trigger Resolver which sits between the GraphQL schema and Glific Trigger Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Triggers.html","title":"GlificWeb.Resolvers.Triggers","type":"module"},{"doc":"Get the count of triggers filtered by args","ref":"GlificWeb.Resolvers.Triggers.html#count_triggers/3","title":"GlificWeb.Resolvers.Triggers.count_triggers/3","type":"function"},{"doc":"Get the list of triggers filtered by args","ref":"GlificWeb.Resolvers.Triggers.html#triggers/3","title":"GlificWeb.Resolvers.Triggers.triggers/3","type":"function"},{"doc":"Update a trigger","ref":"GlificWeb.Resolvers.Triggers.html#update_trigger/3","title":"GlificWeb.Resolvers.Triggers.update_trigger/3","type":"function"},{"doc":"User Resolver which sits between the GraphQL schema and Glific User Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Users.html","title":"GlificWeb.Resolvers.Users","type":"module"},{"doc":"Get the count of users filtered by args","ref":"GlificWeb.Resolvers.Users.html#count_users/3","title":"GlificWeb.Resolvers.Users.count_users/3","type":"function"},{"doc":"Update current user","ref":"GlificWeb.Resolvers.Users.html#update_current_user/3","title":"GlificWeb.Resolvers.Users.update_current_user/3","type":"function"},{"doc":"Update user Later on this end point will be accessible only to role admin","ref":"GlificWeb.Resolvers.Users.html#update_user/3","title":"GlificWeb.Resolvers.Users.update_user/3","type":"function"},{"doc":"WebhookLog Resolver which sits between the GraphQL schema and Glific WebhookLog Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.WebhookLogs.html","title":"GlificWeb.Resolvers.WebhookLogs","type":"module"},{"doc":"Get the count of webhook_logs filtered by args","ref":"GlificWeb.Resolvers.WebhookLogs.html#count_webhook_logs/3","title":"GlificWeb.Resolvers.WebhookLogs.count_webhook_logs/3","type":"function"},{"doc":"Get the list of webhook_logs filtered by args","ref":"GlificWeb.Resolvers.WebhookLogs.html#webhook_logs/3","title":"GlificWeb.Resolvers.WebhookLogs.webhook_logs/3","type":"function"},{"doc":"a default gateway for all the external requests","ref":"GlificWeb.Router.html","title":"GlificWeb.Router","type":"module"},{"doc":"","ref":"GlificWeb.Router.html#api/2","title":"GlificWeb.Router.api/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#api_protected/2","title":"GlificWeb.Router.api_protected/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#auth_protected/2","title":"GlificWeb.Router.auth_protected/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#browser/2","title":"GlificWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Router.html#call/2","title":"GlificWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Router.html#init/1","title":"GlificWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Router.","ref":"GlificWeb.Router.Helpers.html","title":"GlificWeb.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/2","title":"GlificWeb.Router.Helpers.api_v1_registration_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/3","title":"GlificWeb.Router.Helpers.api_v1_registration_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/2","title":"GlificWeb.Router.Helpers.api_v1_registration_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/3","title":"GlificWeb.Router.Helpers.api_v1_registration_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/2","title":"GlificWeb.Router.Helpers.api_v1_session_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/3","title":"GlificWeb.Router.Helpers.api_v1_session_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/2","title":"GlificWeb.Router.Helpers.api_v1_session_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/3","title":"GlificWeb.Router.Helpers.api_v1_session_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/2","title":"GlificWeb.Router.Helpers.flow_editor_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/3","title":"GlificWeb.Router.Helpers.flow_editor_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/4","title":"GlificWeb.Router.Helpers.flow_editor_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/2","title":"GlificWeb.Router.Helpers.flow_editor_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/3","title":"GlificWeb.Router.Helpers.flow_editor_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/4","title":"GlificWeb.Router.Helpers.flow_editor_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/2","title":"GlificWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/3","title":"GlificWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/4","title":"GlificWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/5","title":"GlificWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/2","title":"GlificWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/3","title":"GlificWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/4","title":"GlificWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/5","title":"GlificWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/2","title":"GlificWeb.Router.Helpers.oban_dashboard_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/3","title":"GlificWeb.Router.Helpers.oban_dashboard_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/2","title":"GlificWeb.Router.Helpers.oban_dashboard_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/3","title":"GlificWeb.Router.Helpers.oban_dashboard_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_path/2","title":"GlificWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_path/3","title":"GlificWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_url/2","title":"GlificWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#page_url/3","title":"GlificWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Router.Helpers.html#path/2","title":"GlificWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_path/2","title":"GlificWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_url/2","title":"GlificWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Router.Helpers.html#url/1","title":"GlificWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_path/2","title":"GlificWeb.Router.Helpers.webhook_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_path/3","title":"GlificWeb.Router.Helpers.webhook_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_url/2","title":"GlificWeb.Router.Helpers.webhook_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_url/3","title":"GlificWeb.Router.Helpers.webhook_url/3","type":"function"},{"doc":"This is the container for the top level Absinthe GraphQL schema which encapsulates the entire Glific Public API. This file is primarily a container and pulls in the relevant information for data type specific files.","ref":"GlificWeb.Schema.html","title":"GlificWeb.Schema","type":"module"},{"doc":"Validation function for all subscriptions received by the system","ref":"GlificWeb.Schema.html#config_fun/2","title":"GlificWeb.Schema.config_fun/2","type":"function"},{"doc":"Used to set some values in the context that we may need in order to run. We store the organization id and the current user in the context once the user has been authenticated","ref":"GlificWeb.Schema.html#context/1","title":"GlificWeb.Schema.context/1","type":"function"},{"doc":"Used to apply middleware on all or a group of fields based on pattern matching.It is passed the existing middleware for a field, the field itself, and the object that the field is a part of.","ref":"GlificWeb.Schema.html#middleware/3","title":"GlificWeb.Schema.middleware/3","type":"function"},{"doc":"Used to define the list of plugins to run before and after resolution.","ref":"GlificWeb.Schema.html#plugins/0","title":"GlificWeb.Schema.plugins/0","type":"function"},{"doc":"GraphQL Representation of Glific's Contact Group DataType","ref":"GlificWeb.Schema.ContactGroupTypes.html","title":"GlificWeb.Schema.ContactGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact Tag DataType","ref":"GlificWeb.Schema.ContactTagTypes.html","title":"GlificWeb.Schema.ContactTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact DataType","ref":"GlificWeb.Schema.ContactTypes.html","title":"GlificWeb.Schema.ContactTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Organization Credential DataType","ref":"GlificWeb.Schema.CredentialTypes.html","title":"GlificWeb.Schema.CredentialTypes","type":"module"},{"doc":"Representing our enums in the style Absinthe expects them. We can now use these atoms in the object definitions within the GraphQL Schema","ref":"GlificWeb.Schema.EnumTypes.html","title":"GlificWeb.Schema.EnumTypes","type":"module"},{"doc":"GraphQL Representation of Flow DataType","ref":"GlificWeb.Schema.FlowTypes.html","title":"GlificWeb.Schema.FlowTypes","type":"module"},{"doc":"GraphQL Representation of common data representations used across different Glific's DataType","ref":"GlificWeb.Schema.GenericTypes.html","title":"GlificWeb.Schema.GenericTypes","type":"module"},{"doc":"A forgivable parser which allows integers or strings to represent integers","ref":"GlificWeb.Schema.GenericTypes.html#parse_maybe_integer/1","title":"GlificWeb.Schema.GenericTypes.parse_maybe_integer/1","type":"function"},{"doc":"GraphQL Representation of Glific's Group DataType","ref":"GlificWeb.Schema.GroupTypes.html","title":"GlificWeb.Schema.GroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Language DataType","ref":"GlificWeb.Schema.LanguageTypes.html","title":"GlificWeb.Schema.LanguageTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Location DataType","ref":"GlificWeb.Schema.LocationTypes.html","title":"GlificWeb.Schema.LocationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's MessageMedia DataType","ref":"GlificWeb.Schema.MessageMediaTypes.html","title":"GlificWeb.Schema.MessageMediaTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message Tag DataType","ref":"GlificWeb.Schema.MessageTagTypes.html","title":"GlificWeb.Schema.MessageTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message DataType","ref":"GlificWeb.Schema.MessageTypes.html","title":"GlificWeb.Schema.MessageTypes","type":"module"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.AddOrganization.html","title":"GlificWeb.Schema.Middleware.AddOrganization","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.AddOrganization.html#call/2","title":"GlificWeb.Schema.Middleware.AddOrganization.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.Authorize.html","title":"GlificWeb.Schema.Middleware.Authorize","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.Authorize.html#call/2","title":"GlificWeb.Schema.Middleware.Authorize.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html","title":"GlificWeb.Schema.Middleware.ChangesetErrors","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html#call/2","title":"GlificWeb.Schema.Middleware.ChangesetErrors.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Elixir and friends into a format consumable and displayable to the API user. This version is specifically for queries.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html","title":"GlificWeb.Schema.Middleware.QueryErrors","type":"module"},{"doc":"This is the main middleware callback.It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html#call/2","title":"GlificWeb.Schema.Middleware.QueryErrors.call/2","type":"function"},{"doc":"GraphQL Representation of Glific's Organization DataType","ref":"GlificWeb.Schema.OrganizationTypes.html","title":"GlificWeb.Schema.OrganizationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Provider DataType","ref":"GlificWeb.Schema.ProviderTypes.html","title":"GlificWeb.Schema.ProviderTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Search DataType","ref":"GlificWeb.Schema.SearchTypes.html","title":"GlificWeb.Schema.SearchTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Session Template DataType","ref":"GlificWeb.Schema.SessionTemplateTypes.html","title":"GlificWeb.Schema.SessionTemplateTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Tag DataType","ref":"GlificWeb.Schema.TagTypes.html","title":"GlificWeb.Schema.TagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Template Tag DataType","ref":"GlificWeb.Schema.TemplateTagTypes.html","title":"GlificWeb.Schema.TemplateTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Trigger DataType","ref":"GlificWeb.Schema.TriggerTypes.html","title":"GlificWeb.Schema.TriggerTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User Group DataType","ref":"GlificWeb.Schema.UserGroupTypes.html","title":"GlificWeb.Schema.UserGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User DataType","ref":"GlificWeb.Schema.UserTypes.html","title":"GlificWeb.Schema.UserTypes","type":"module"},{"doc":"GraphQL Representation of Glific's WebhookLog DataType","ref":"GlificWeb.Schema.WebhookLogTypes.html","title":"GlificWeb.Schema.WebhookLogTypes","type":"module"},{"doc":"This is a basic plug that loads the current organization assign from a given value set on subdomain.To plug it on your router, you can use:plug GlificWeb.SubdomainPlug, endpoint: MyApp.Endpoint, organization_handler: &amp;OrganizationHelper.organization_handler/1See GlificWeb.SubdomainPlugConfig to check all the allowed config flags.","ref":"GlificWeb.SubdomainPlug.html","title":"GlificWeb.SubdomainPlug","type":"module"},{"doc":"This is a struct that holds the configuration for GlificWeb.SubdomainPlug.Here are the config keys allowed:organization_handler: function to handle the organization param. Its return will be used as the organization.assign: the name of the assign where we must save the organization.endpoint: the Phoenix.Endpoint to get the host name to dicover the subdomain.","ref":"GlificWeb.SubdomainPlugConfig.html","title":"GlificWeb.SubdomainPlugConfig","type":"module"},{"doc":"","ref":"GlificWeb.SubdomainPlugConfig.html#t:t/0","title":"GlificWeb.SubdomainPlugConfig.t/0","type":"type"},{"doc":"This is the main module of multi-tenancy in Glific. It has been borrowed from Triplex. (https://github.com/ateliware/triplex). However we are going to us postgres row level security instead, and hence copying the code from there. The original copyright and license (MIT) belong to the contributors to Triplex.The main objetive of it is to make a little bit easier to manage organizations through postgres db schemas or equivalents, executing queries and commands inside and outside the organization without much boilerplate code.","ref":"GlificWeb.Tenants.html","title":"GlificWeb.Tenants","type":"module"},{"doc":"Given a string from the connection info (subdomain), check and retrieve the organization id.For the short term, we'll default to organization id Glific, if we cannot resolve the sub-domain, we'll remove this in v0.4","ref":"GlificWeb.Tenants.html#organization_handler/1","title":"GlificWeb.Tenants.organization_handler/1","type":"function"},{"doc":"Returns if the given organization is reserved or not.The function to_prefix/1 will be applied to the organization.","ref":"GlificWeb.Tenants.html#reserved_organization?/1","title":"GlificWeb.Tenants.reserved_organization?/1","type":"function"},{"doc":"Returns the list of reserved organizations.By default, there are some limitations for the name of a organization depending on the database, like &quot;public&quot; or anything that start with &quot;pg_&quot;.Notice that you can use regexes, and they will be applied to the organization names.","ref":"GlificWeb.Tenants.html#reserved_organizations/0","title":"GlificWeb.Tenants.reserved_organizations/0","type":"function"},{"doc":"Glific - Two Way Open Source Communication Platform","ref":"readme.html","title":"Glific - Two Way Open Source Communication Platform","type":"extras"},{"doc":"Install the following packages using your favorite package manager. Links are provided for someInstall Elixir (check package versions below)For Ubuntu users you also need to install the inotify-tools packageInstall PostgresFor Postgres, for the development server, we default to using postgres/postgres as the username/password. This is configurable","ref":"readme.html#packages-needed","title":"Glific - Two Way Open Source Communication Platform - Packages Needed","type":"extras"},{"doc":"Glific is currently developed and hosted on the following platforms. Our goal is to always try and use the latest versions of each platform as soon as feasible (i.e. once the ecosystem of packages we used have upgraded). We do not have the bandwidth to support earlier versions of the packages.erlang : 23.2.5elixir : 1.11.3-otp-23nodejs : 14.16.0postgres : v12.x or v13.x","ref":"readme.html#package-versions","title":"Glific - Two Way Open Source Communication Platform - Package Versions","type":"extras"},{"doc":"Download the latest code from GitHub","ref":"readme.html#download-code","title":"Glific - Two Way Open Source Communication Platform - Download code","type":"extras"},{"doc":"Copy the file: config/dev.secret.exs.txt to config/dev.secret.exs and edit it with your credentialsStart the postgres serverRun mix setupThis will setup Glific with default credentials as:Phone 917834811114Password secret1234Run mix phx.server","ref":"readme.html#setup","title":"Glific - Two Way Open Source Communication Platform - Setup","type":"extras"},{"doc":"Now you can visit localhost:4000 from your browser.","ref":"readme.html#here-we-go","title":"Glific - Two Way Open Source Communication Platform - Here we go","type":"extras"},{"doc":"You cannot do much from the glific-backend unless you are an API developer. To see Glific in its glory, please install Glific Frontend","ref":"readme.html#install-glific-frontend","title":"Glific - Two Way Open Source Communication Platform - Install glific-frontend","type":"extras"},{"doc":"The frontend and backend are great, but you will need an account with a WhatsApp Business Provider to explore the application. The currently supported backend is Gupshup. You will need to do the following:Create a Gupshup AccountCreate a WhatsApp Messaging App on GupshupYou can name it GlificTest and ensure the App Type is Access APIEdit config/dev.secret.exs in the backend directoryEnter your API Key, which can be found by clicking on your profile in the top left corner of your gupshup dashboardEnter your APP nameStart the backend server in iex session: iex -S mixUpdate HSM templates: Glific.Templates.update_hsms(1)Install ngrokStart ngrok to proxy port 4000:Start the backend server: mix phx.server$ ngrok http 4000 --host-header=localhost:4000 (do this in a new window))Remember the URL it assigns you, something like: https://9f6a7c7822d2.ngrok.ioGoto the Settings PageOn that page, Search for Manage your Template messaging settings and enable itOn same page, Search for Callback URL / Link your BotEnter your callback URL that ngrok gave you, add: /gupshup to the end. Something like: https://9f6a7c7822d2.ngrok.io/gupshup/Click Set. It should give you a Callback set successfully message. If not, check the above steps.","ref":"readme.html#create-and-link-your-gupshup-account","title":"Glific - Two Way Open Source Communication Platform - Create and link your Gupshup Account","type":"extras"},{"doc":"For v0.x releases, we will be resetting the DB and not saving existing state. Run the following commands to update your codebase from the glicic repository.Ensure you are in the top level directory of the glific api code.Get the latest code from master: git switch master; git pullEnsure you have not modified any files in this directory, by running: git statusRun the setup command: mix setup","ref":"readme.html#updating-your-instance","title":"Glific - Two Way Open Source Communication Platform - Updating your instance","type":"extras"},{"doc":"If you are using AWS codebuild for CD, use buildspec.yml.sample file content for creating and pushing docker image.For using and alternative repository like docker hub, you just need to make some changes in the pre_build phase (REPOSITORY_URI and authentications), the rest of the phases will remains same.","ref":"readme.html#deploying-release-on-ecs-with-cd","title":"Glific - Two Way Open Source Communication Platform - Deploying release on ECS with CD","type":"extras"},{"doc":"GraphQL API docsCode docsSlab docs","ref":"readme.html#documentation","title":"Glific - Two Way Open Source Communication Platform - Documentation","type":"extras"},{"doc":"GlificDemo VideoOne PagerProduct FeaturesGlific BlogsGoogle Drive","ref":"readme.html#learn-more","title":"Glific - Two Way Open Source Communication Platform - Learn more","type":"extras"},{"doc":"Chat on Discord","ref":"readme.html#chat-with-us","title":"Glific - Two Way Open Source Communication Platform - Chat with us","type":"extras"},{"doc":"ChangelogAll notable changes to this project will be documented in this file.The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","ref":"changelog.html","title":"Changelog","type":"extras"},{"doc":"AddedAdd import functionality via CSV for contactsFixedAllow flows to proceed always. Checks are performed within flow execution","ref":"changelog.html#1-1-2-2021-03-11","title":"Changelog - [1.1.2] - 2021-03-11","type":"extras"},{"doc":"FixedEnsure that the status search queries limit number of contacts","ref":"changelog.html#0-11-1-2021-02-14","title":"Changelog - [0.11.1] - 2021-02-14","type":"extras"},{"doc":"FixedEliminate search count in saved searches GraphQLSkip reporting Exit Loop? as appsignal error","ref":"changelog.html#0-11-0-2021-02-14","title":"Changelog - [0.11.0] - 2021-02-14","type":"extras"},{"doc":"FixedFound and fixed infinite loop issueTake advantage of prepared schema's for pg 12+Continue with our DB optimization questImprove subscription performance, especially for saved search","ref":"changelog.html#0-10-8-2021-02-11","title":"Changelog - [0.10.8] - 2021-02-11","type":"extras"},{"doc":"FixedUse json maps rather than our own pseudo-mapsImprove GCS and BigQuery codeImprove garbage collection in consumer workerMore learning on GenServer","ref":"changelog.html#0-10-4-2021-02-08","title":"Changelog - [0.10.4] - 2021-02-08","type":"extras"},{"doc":"AddedTrigger for updating messages's updated_at when message is taggedTrigger for updating contacts's updated_at when contact is taggedAdded size validation for media attachments","ref":"changelog.html#0-9-7-2021-01-25","title":"Changelog - [0.9.7] - 2021-01-25","type":"extras"},{"doc":"AddedSupport for failed authenticationAdded plugins and versioning for appsignal in frontendFixedBigQuery updating mesages periodicallyBigQuery updating contacts periodicallySimulator scroll issueJump to latest button position","ref":"changelog.html#0-9-6-2021-01-23","title":"Changelog - [0.9.6] - 2021-01-23","type":"extras"},{"doc":"AddedTrigger for updating contact's updated_at when contact is added to groupMessage status subscriptionRedirection to httpsFixedMaking description fields as text fieldUpdated README.mdBigQuery CleanupsRemoved GlificProxy serverMaking message body as nullable in case of media speed sendsSearch conversation errorsOrder by column error","ref":"changelog.html#0-9-5-2021-01-22","title":"Changelog - [0.9.5] - 2021-01-22","type":"extras"},{"doc":"AddedWebhook signature fieldValidate media URL in while sending media in flowsAdded CORS proxy serverFlow editor media URL validationFixedOptimize fetching opted in contacts from BSP serverSending errors in case of wrong API keysAPI Client cleanupsHandle null message errorWallet balance errorNot displaying last message media typesBackground change for contact bar icons","ref":"changelog.html#0-9-4-2021-01-18","title":"Changelog - [0.9.4] - 2021-01-18","type":"extras"},{"doc":"AddedMaking keyword as Nullable when creating a new flowSending Message status subcriptionAdded seeder for flow resultsFixedContact id jump when contact optout","ref":"changelog.html#0-9-3-2021-01-14","title":"Changelog - [0.9.3] - 2021-01-14","type":"extras"},{"doc":"AddedResponsive chat screen for mobile viewRenamed collections to searchesSupport for location in messagesStatus in Webhook logsSupport for filtering webhook logs with part URLUpdated Seeder for devFixedOptimizing organization subscription by checking for active organizationsUpdating all HSM templates","ref":"changelog.html#0-9-2-2021-01-11","title":"Changelog - [0.9.2] - 2021-01-11","type":"extras"},{"doc":"AddedFloweditor maximum attachments support set to 1Support in flow engine for &quot;wait for time&quot; nodeValidation for template listUpgrade elixir packages to latest versionFixedFixed contact field with name containing underscore","ref":"changelog.html#0-9-1-2021-01-06","title":"Changelog - [0.9.1] - 2021-01-06","type":"extras"},{"doc":"AddedSupport for &quot;wait for time&quot; nodeUpdating Flow results that were updated in last 90 minsSupport for sending media HSMsSupport for showing webhook logsFixedFixed issue of contact field being saved to Bigquery with label as nilFixed appsignal errors","ref":"changelog.html#0-9-0-2021-01-04","title":"Changelog - [0.9.0] - 2021-01-04","type":"extras"},{"doc":"AddedStore messages sent to group in messages tableAPI to retrieve group conversationsflow_context id to flow results table so we store each run through the flow","ref":"changelog.html#0-8-7-2020-12-28","title":"Changelog - [0.8.7] - 2020-12-28","type":"extras"},{"doc":"AddedStir usecase, computing score based on answers of surveyStir usecase, returning list of wrongly answeredSupport for message variable parserSupport for fetching hsm templates from gupshup periodicallyFixedfixed message variable parsing in webhook, route and contact fieldUsing dot syntax in webhook results","ref":"changelog.html#0-8-6-2020-12-22","title":"Changelog - [0.8.6] - 2020-12-22","type":"extras"},{"doc":"AddedSupport for retrieving HSM messages from gupshupSwitched to new API to send HSM messages","ref":"changelog.html#0-8-5-2020-12-17","title":"Changelog - [0.8.5] - 2020-12-17","type":"extras"},{"doc":"AddedRescheduling oban jobs in case of failure for ensuring data archivalAdded Check for bigquery tables and dataset in case of Bigquery Jobs failureClearing cache on encrypting data with new keyAdding custom data as JSON in WebhookFixedWebhook fixesFetching all details for bigquery integration from single JSONCloak Key migration fixes","ref":"changelog.html#0-8-4-2020-12-15","title":"Changelog - [0.8.4] - 2020-12-15","type":"extras"},{"doc":"AddedSupport for translations in templatesAttachment support for various translations in flow editor and templatesCannot block simulator contact anymore.UI/UX enhancementsAdded opt-in instructions on the registration pageTimer display correctionsAutomations are renamed to &quot;Flows&quot;FixedTweak settings in AppSignal to ignore DB queries","ref":"changelog.html#0-8-3-2020-12-08","title":"Changelog - [0.8.3] - 2020-12-08","type":"extras"},{"doc":"AddedAdd caches expiration and refreshes support for keeping check that only frequently used data is cached.Added logging for tracking various eventsAdded has all words option in automation for user responded messages.Archiving Flow results in BigqueryStickers have transparent backgroundPlaceholder in chat inputUpgrade to 2.0 version of AppSignalFixedHigh memory utilization problemFlow keyword issue, saving clean stringsSaving only recent five messages in flow recent messagesAutosave calls after moving away from flow configure screen","ref":"changelog.html#0-8-2-2020-12-07","title":"Changelog - [0.8.2] - 2020-12-07","type":"extras"},{"doc":"AddedAttachment support from the chat windowSticker Support in messagesSend Media HSM templates from flow editorShowing BSP balance on the dashboardAdded flows information on the bigqueryMask phone numbers in the profile pageSync contact fields in BigqueryArchiving Flows in BigqueryMedia HSM filesShowing BSP balance on the dashboardUpdated DocumentationFixedFixed login timeout issue.Update the readme fileAdding contact to group from automation","ref":"changelog.html#0-8-0-and-prior-2020-12-01","title":"Changelog - [0.8.0 and prior] - 2020-12-01","type":"extras"},{"doc":"AddedLogging high level actionsAttachment support to sending messages in frontendSupport for stickers typeSupport in BigQuery for updating contacts, messages and new tables for flows, groups.ChangedRemoved most of the standard flows from productionFixedImproved support for rate limiting when communicating with GupshupUpgraded floweditor version","ref":"changelog.html#0-7-3-2020-11-30","title":"Changelog - [0.7.3] - 2020-11-30","type":"extras"},{"doc":"AddedSupport for webhooks (preliminary)Support for permissioning at the staff levelDisplay of remaining budget on GupshupSupport for HSM's including Quick Reply and Call to ActionFixedKeywords for flows are now all lowercase","ref":"changelog.html#0-7-2-2020-11-23","title":"Changelog - [0.7.2] - 2020-11-23","type":"extras"},{"doc":"AddedCore Glific DB Structure and functionalityPhoenix Schema and Context StructureGraphQL API as main interface to the core platformUser Authentication and PermissioningTags, Collections, Conversations, Groups as core building blocksSettings to store and manage credentials of various servicesIntegration with 3rd party communication providersUnit Tests for all glific code with 80%+ code and documentation coverageCI system via GitHub ActionsCD system to GigalixirCommunity documentation (README, LICENSE, CHANGELOG, CODE_OF_CONDUCT)","ref":"changelog.html#0-7-1-and-prior-2020-11-16","title":"Changelog - [0.7.1 and prior] - 2020-11-16","type":"extras"}]